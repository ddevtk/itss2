{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/DynoDictionary/SettingWordPack.js\",\n    _s = $RefreshSig$();\n\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DDSettingWordPack(_ref) {\n  _s();\n\n  let {\n    classNameIcon,\n    onChoose\n  } = _ref;\n  const [openWordPack, setOpenWordPack] = useState(false);\n\n  const onSelect = v => {\n    onChoose(v);\n    setOpenWordPack(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n      className: classNameIcon,\n      onClick: () => setOpenWordPack(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), openWordPack && /*#__PURE__*/_jsxDEV(WordPack, {\n      open: openWordPack,\n      onCancel: () => setOpenWordPack(false),\n      onChoose: onSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DDSettingWordPack, \"sBTwtl+iF/HT2j4O+B8v7xAtaiw=\");\n\n_c = DDSettingWordPack;\nDDSettingWordPack.propTypes = {\n  classNameIcon: PropTypes.string,\n  onChoose: PropTypes.func\n};\nDDSettingWordPack.defaultProps = {\n  onChoose: () => {}\n};\nexport default DDSettingWordPack;\n\nvar _c;\n\n$RefreshReg$(_c, \"DDSettingWordPack\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/DynoDictionary/SettingWordPack.js"],"names":["SettingsIcon","WordPack","PropTypes","React","useState","DDSettingWordPack","classNameIcon","onChoose","openWordPack","setOpenWordPack","onSelect","v","propTypes","string","func","defaultProps"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,iBAAT,OAAwD;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAA6B;AACtD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,QAAQ,CAACI,CAAD,CAAR;AACAF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,SAAS,EAAEH,aADb;AAEE,MAAA,OAAO,EAAE,MAAMG,eAAe,CAAC,IAAD;AAFhC;AAAA;AAAA;AAAA;AAAA,YADF,EAOGD,YAAY,iBACX,QAAC,QAAD;AACE,MAAA,IAAI,EAAEA,YADR;AAEE,MAAA,QAAQ,EAAE,MAAMC,eAAe,CAAC,KAAD,CAFjC;AAGE,MAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADF;AAiBD;;GAzBQL,iB;;KAAAA,iB;AA2BTA,iBAAiB,CAACO,SAAlB,GAA8B;AAC5BN,EAAAA,aAAa,EAAEJ,SAAS,CAACW,MADG;AAE5BN,EAAAA,QAAQ,EAAEL,SAAS,CAACY;AAFQ,CAA9B;AAKAT,iBAAiB,CAACU,YAAlB,GAAiC;AAC/BR,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADa,CAAjC;AAIA,eAAeF,iBAAf","sourcesContent":["import SettingsIcon from '@material-ui/icons/Settings';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nfunction DDSettingWordPack({ classNameIcon, onChoose }) {\n  const [openWordPack, setOpenWordPack] = useState(false);\n\n  const onSelect = (v) => {\n    onChoose(v);\n    setOpenWordPack(false);\n  };\n\n  return (\n    <>\n      <SettingsIcon\n        className={classNameIcon}\n        onClick={() => setOpenWordPack(true)}\n      />\n\n      {/* setting modal */}\n      {openWordPack && (\n        <WordPack\n          open={openWordPack}\n          onCancel={() => setOpenWordPack(false)}\n          onChoose={onSelect}\n        />\n      )}\n    </>\n  );\n}\n\nDDSettingWordPack.propTypes = {\n  classNameIcon: PropTypes.string,\n  onChoose: PropTypes.func,\n};\n\nDDSettingWordPack.defaultProps = {\n  onChoose: () => {},\n};\n\nexport default DDSettingWordPack;\n"]},"metadata":{},"sourceType":"module"}