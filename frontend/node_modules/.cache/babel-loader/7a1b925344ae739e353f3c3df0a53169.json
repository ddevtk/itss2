{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/PlayGames/WordMatch/data.js\",\n    _s = $RefreshSig$();\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport gameApi from 'apis/gameApi';\nimport GlobalLoading from 'components/UI/GlobalLoading';\nimport InputCustom from 'components/UI/InputCustom';\nimport WordPack from 'components/UI/WordPack';\nimport React, { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport WordMatchGame from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_LEN_WORD_PACK = 500;\n\nfunction WordMatchGameData() {\n  _s();\n\n  // 0 - choose word pack, 1 - get pack, 2 - done\n  const [state, setState] = useState(0);\n  const [wordPack, setWordPack] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const nQuestion = useRef(50);\n\n  const getWordPackage = async _ref => {\n    let {\n      type,\n      topics,\n      level,\n      specialty\n    } = _ref;\n\n    try {\n      setState(1);\n      const n = nQuestion.current < 0 || nQuestion.current > MAX_LEN_WORD_PACK ? 100 : nQuestion.current;\n      const apiRes = await gameApi.getWordPackWordMatch(type, level, specialty, topics, n);\n\n      if (apiRes.status === 200) {\n        const {\n          wordPack = []\n        } = apiRes.data;\n\n        if (wordPack.length === 0) {\n          dispatch(setMessage({\n            type: 'warning',\n            message: 'Rất xin lỗi, gói từ vựng hiện tại không đủ. Vui lòng thử lại sao',\n            duration: 3000\n          }));\n          setState(0);\n          return;\n        }\n\n        setWordPack(wordPack);\n        setState(2);\n        return;\n      }\n\n      dispatch(setMessage({\n        type: 'warning',\n        message: 'Lấy gói từ vựng thất bại, thử lại !'\n      }));\n      setState(0);\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Lấy gói từ vựng thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n      setState(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: state === 0 ? /*#__PURE__*/_jsxDEV(WordPack, {\n      open: true,\n      onChoose: getWordPackage,\n      onCancel: () => history.goBack(),\n      topicMultiples: true,\n      title: \"L\\u1EF1a ch\\u1ECDn g\\xF3i t\\u1EEB v\\u1EF1ng\",\n      okBtnText: \"B\\u1EAFt \\u0111\\u1EA7u\",\n      cancelBtnText: \"Quay l\\u1EA1i\",\n      cancelBtnProps: {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 40\n        }, this)\n      },\n      okBtnProps: {\n        startIcon: /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 36\n        }, this)\n      },\n      children: /*#__PURE__*/_jsxDEV(InputCustom, {\n        type: \"number\",\n        inputProps: {\n          min: 5,\n          max: MAX_LEN_WORD_PACK,\n          defaultValue: 50\n        },\n        placeholder: \"Nh\\u1EADp s\\u1ED1 c\\xE2u\",\n        label: \"S\\u1ED1 c\\xE2u\",\n        className: \"w-100\",\n        onChange: e => nQuestion.current = e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : state === 1 ? /*#__PURE__*/_jsxDEV(GlobalLoading, {\n      title: \"\\u0110ang t\\u1EA3i g\\xF3i c\\xE2u h\\u1ECFi ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WordMatchGame, {\n      list: wordPack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WordMatchGameData, \"vBv37T7cniNE8j6T4M1IbdLoTV8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = WordMatchGameData;\nexport default WordMatchGameData;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordMatchGameData\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/PlayGames/WordMatch/data.js"],"names":["ArrowBackIcon","PlayIcon","gameApi","GlobalLoading","InputCustom","WordPack","React","useRef","useState","useDispatch","useHistory","setMessage","WordMatchGame","MAX_LEN_WORD_PACK","WordMatchGameData","state","setState","wordPack","setWordPack","dispatch","history","nQuestion","getWordPackage","type","topics","level","specialty","n","current","apiRes","getWordPackWordMatch","status","data","length","message","duration","error","response","goBack","startIcon","min","max","defaultValue","e","target","value"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,GAA1B;;;AACA,MAAMC,iBAAiB,GAAG,GAA1B;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,SAAS,GAAGd,MAAM,CAAC,EAAD,CAAxB;;AAEA,QAAMe,cAAc,GAAG,cAA8C;AAAA,QAAvC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA;AAAvB,KAAuC;;AACnE,QAAI;AACFV,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACA,YAAMW,CAAC,GACLN,SAAS,CAACO,OAAV,GAAoB,CAApB,IAAyBP,SAAS,CAACO,OAAV,GAAoBf,iBAA7C,GACI,GADJ,GAEIQ,SAAS,CAACO,OAHhB;AAKA,YAAMC,MAAM,GAAG,MAAM3B,OAAO,CAAC4B,oBAAR,CACnBP,IADmB,EAEnBE,KAFmB,EAGnBC,SAHmB,EAInBF,MAJmB,EAKnBG,CALmB,CAArB;;AAOA,UAAIE,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;AACzB,cAAM;AAAEd,UAAAA,QAAQ,GAAG;AAAb,YAAoBY,MAAM,CAACG,IAAjC;;AACA,YAAIf,QAAQ,CAACgB,MAAT,KAAoB,CAAxB,EAA2B;AACzBd,UAAAA,QAAQ,CACNR,UAAU,CAAC;AACTY,YAAAA,IAAI,EAAE,SADG;AAETW,YAAAA,OAAO,EACL,kEAHO;AAITC,YAAAA,QAAQ,EAAE;AAJD,WAAD,CADJ,CAAR;AAQAnB,UAAAA,QAAQ,CAAC,CAAD,CAAR;AACA;AACD;;AAEDE,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACA;AACD;;AAEDG,MAAAA,QAAQ,CACNR,UAAU,CAAC;AACTY,QAAAA,IAAI,EAAE,SADG;AAETW,QAAAA,OAAO,EAAE;AAFA,OAAD,CADJ,CAAR;AAOAlB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KA1CD,CA0CE,OAAOoB,KAAP,EAAc;AAAA;;AACd,YAAMF,OAAO,GACX,oBAAAE,KAAK,CAACC,QAAN,4FAAgBL,IAAhB,8EAAsBE,OAAtB,KAAiC,qCADnC;AAEAf,MAAAA,QAAQ,CAACR,UAAU,CAAC;AAAEY,QAAAA,IAAI,EAAE,OAAR;AAAiBW,QAAAA;AAAjB,OAAD,CAAX,CAAR;AACAlB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,GAjDD;;AAmDA,sBACE;AAAA,cACGD,KAAK,KAAK,CAAV,gBACC,QAAC,QAAD;AACE,MAAA,IAAI,EAAE,IADR;AAEE,MAAA,QAAQ,EAAEO,cAFZ;AAGE,MAAA,QAAQ,EAAE,MAAMF,OAAO,CAACkB,MAAR,EAHlB;AAIE,MAAA,cAAc,EAAE,IAJlB;AAKE,MAAA,KAAK,EAAC,6CALR;AAME,MAAA,SAAS,EAAC,wBANZ;AAOE,MAAA,aAAa,EAAC,eAPhB;AAQE,MAAA,cAAc,EAAE;AAAEC,QAAAA,SAAS,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAb,OARlB;AASE,MAAA,UAAU,EAAE;AAAEA,QAAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAb,OATd;AAAA,6BAUE,QAAC,WAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,UAAU,EAAE;AACVC,UAAAA,GAAG,EAAE,CADK;AAEVC,UAAAA,GAAG,EAAE5B,iBAFK;AAGV6B,UAAAA,YAAY,EAAE;AAHJ,SAFd;AAOE,QAAA,WAAW,EAAC,0BAPd;AAQE,QAAA,KAAK,EAAC,gBARR;AASE,QAAA,SAAS,EAAC,OATZ;AAUE,QAAA,QAAQ,EAAGC,CAAD,IAAQtB,SAAS,CAACO,OAAV,GAAoBe,CAAC,CAACC,MAAF,CAASC;AAVjD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADD,GAwBG9B,KAAK,KAAK,CAAV,gBACF,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA;AA5BJ,mBADF;AAiCD;;GA5FQH,iB;UAIUL,W,EACDC,U;;;KALTI,iB;AA8FT,eAAeA,iBAAf","sourcesContent":["import ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport gameApi from 'apis/gameApi';\nimport GlobalLoading from 'components/UI/GlobalLoading';\nimport InputCustom from 'components/UI/InputCustom';\nimport WordPack from 'components/UI/WordPack';\nimport React, { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport WordMatchGame from '.';\nconst MAX_LEN_WORD_PACK = 500;\n\nfunction WordMatchGameData() {\n  // 0 - choose word pack, 1 - get pack, 2 - done\n  const [state, setState] = useState(0);\n  const [wordPack, setWordPack] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const nQuestion = useRef(50);\n\n  const getWordPackage = async ({ type, topics, level, specialty }) => {\n    try {\n      setState(1);\n      const n =\n        nQuestion.current < 0 || nQuestion.current > MAX_LEN_WORD_PACK\n          ? 100\n          : nQuestion.current;\n\n      const apiRes = await gameApi.getWordPackWordMatch(\n        type,\n        level,\n        specialty,\n        topics,\n        n,\n      );\n      if (apiRes.status === 200) {\n        const { wordPack = [] } = apiRes.data;\n        if (wordPack.length === 0) {\n          dispatch(\n            setMessage({\n              type: 'warning',\n              message:\n                'Rất xin lỗi, gói từ vựng hiện tại không đủ. Vui lòng thử lại sao',\n              duration: 3000,\n            }),\n          );\n          setState(0);\n          return;\n        }\n\n        setWordPack(wordPack);\n        setState(2);\n        return;\n      }\n\n      dispatch(\n        setMessage({\n          type: 'warning',\n          message: 'Lấy gói từ vựng thất bại, thử lại !',\n        }),\n      );\n\n      setState(0);\n    } catch (error) {\n      const message =\n        error.response?.data?.message || 'Lấy gói từ vựng thất bại, thử lại !';\n      dispatch(setMessage({ type: 'error', message }));\n      setState(0);\n    }\n  };\n\n  return (\n    <>\n      {state === 0 ? (\n        <WordPack\n          open={true}\n          onChoose={getWordPackage}\n          onCancel={() => history.goBack()}\n          topicMultiples={true}\n          title=\"Lựa chọn gói từ vựng\"\n          okBtnText=\"Bắt đầu\"\n          cancelBtnText=\"Quay lại\"\n          cancelBtnProps={{ startIcon: <ArrowBackIcon /> }}\n          okBtnProps={{ startIcon: <PlayIcon /> }}>\n          <InputCustom\n            type=\"number\"\n            inputProps={{\n              min: 5,\n              max: MAX_LEN_WORD_PACK,\n              defaultValue: 50,\n            }}\n            placeholder=\"Nhập số câu\"\n            label=\"Số câu\"\n            className=\"w-100\"\n            onChange={(e) => (nQuestion.current = e.target.value)}\n          />\n        </WordPack>\n      ) : state === 1 ? (\n        <GlobalLoading title=\"Đang tải gói câu hỏi ...\" />\n      ) : (\n        <WordMatchGame list={wordPack} />\n      )}\n    </>\n  );\n}\n\nexport default WordMatchGameData;\n"]},"metadata":{},"sourceType":"module"}