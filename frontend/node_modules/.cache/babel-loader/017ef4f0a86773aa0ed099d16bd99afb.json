{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/UserAccount/index.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport { current } from '@reduxjs/toolkit';\nimport InputCustom from 'components/UI/InputCustom';\nimport UploadButton from 'components/UI/UploadButton';\nimport { DEFAULTS, MAX } from 'constant';\nimport { cloudinaryImgOptimize } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserAccount(_ref) {\n  _s();\n\n  let {\n    onUpload,\n    onUpdateProfile,\n    email,\n    createdDate\n  } = _ref;\n  const userInfo = useSelector(state => state.userInfo);\n  const {\n    username,\n    name,\n    avt,\n    coin\n  } = userInfo;\n  const avtSrc = Boolean(avt) ? cloudinaryImgOptimize(avt, 150, 150) : DEFAULTS.IMAGE_SRC;\n  const classes = useStyle();\n  const [editMode, setEditMode] = useState(false);\n  const inputRef = useRef({\n    name,\n    username\n  });\n  const [errors, setErrors] = useState({\n    name: false,\n    username: false\n  });\n  const dispatch = useDispatch();\n\n  const handleInputChange = function (v) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (type) {\n      errors.name && v !== '' && setErrors({ ...errors,\n        name: false\n      });\n      inputRef.current.name = v;\n    } else {\n      errors.username && v !== '' && setErrors({ ...errors,\n        username: false\n      });\n      inputRef.current.username = v;\n    }\n  };\n\n  const handleCloseEditMode = () => {\n    inputRef.current = {\n      name,\n      username\n    };\n    setEditMode(false);\n  };\n\n  const handleUpdate = () => {\n    const {\n      name: currentName,\n      username: currentUsername\n    } = inputRef.current;\n\n    if (currentName === name.trim() && username === currentUsername.trim()) {\n      return;\n    }\n\n    if (currentName.trim() === '') {\n      setErrors({ ...errors,\n        name: true\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: 'Vui lòng nhập tên'\n      }));\n      return;\n    }\n\n    if (currentUsername.trim() === '') {\n      setErrors({ ...errors,\n        username: true\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: 'Vui lòng nhập username'\n      }));\n      return;\n    }\n\n    if (currentUsername.indexOf(' ') !== -1) {\n      setErrors({ ...errors,\n        username: true\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: 'username không chứa khoảng trống'\n      }));\n      return;\n    }\n\n    if (currentUsername.length > MAX.USERNAME_LEN) {\n      setErrors({ ...errors,\n        username: true\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: `username tối đa ${MAX.USERNAME_LEN} ký tự`\n      }));\n      return;\n    }\n\n    if (currentName.length > MAX.NAME_LEN) {\n      setErrors({ ...errors,\n        name: true\n      });\n      dispatch(setMessage({\n        type: 'error',\n        message: `Tên tối đa ${MAX.NAME_LEN} ký tự`\n      }));\n      return;\n    }\n\n    onUpdateProfile(currentName.trim(), currentUsername.trim());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.wrap} container flex-center`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center w-100 h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avtWrap,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${classes.avt} w-100 h-100`,\n            src: avtSrc,\n            alt: \"Avatar Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.cameraIconWrap} flex-center`,\n            children: [/*#__PURE__*/_jsxDEV(CameraIcon, {\n              className: classes.cameraIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n              className: classes.fileInput,\n              onChange: onUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), !editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.name,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.username,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center-col mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n          onChange: e => handleInputChange(e.target.value, 1),\n          className: \"mb-8\",\n          placeholder: name,\n          label: \"Nh\\u1EADp t\\xEAn\",\n          error: errors.name,\n          defaultValue: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputCustom, {\n          onChange: e => handleInputChange(e.target.value, 0),\n          placeholder: username,\n          label: \"Nh\\u1EADp username\",\n          error: errors.username,\n          defaultValue: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: [Boolean(email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 30\n        }, this), Boolean(createdDate) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0110\\xE3 tham gia v\\xE0o \", createdDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"S\\u1ED1 coin hi\\u1EC7n t\\u1EA1i: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.coin,\n            children: coin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), !editMode ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setEditMode(true),\n        className: `${classes.editBtn} _btn _btn-primary w-100`,\n        startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 24\n        }, this),\n        children: \"Ch\\u1EC9nh s\\u1EEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditMode,\n          className: `${classes.editBtn} _btn _btn-outlined-accent w-50`,\n          children: \"Hu\\u1EF7 b\\u1ECF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdate,\n          className: `${classes.editBtn} _btn _btn-primary ml-4 w-50`,\n          children: \"C\\u1EADp nh\\u1EADt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserAccount, \"o5DL6WbYm7sFgF5LiUnR00HkPJY=\", false, function () {\n  return [useSelector, useStyle, useDispatch];\n});\n\n_c = UserAccount;\nUserAccount.propTypes = {\n  createdDate: PropTypes.any,\n  email: PropTypes.string,\n  onUpload: PropTypes.func,\n  onUpdateProfile: PropTypes.func\n};\nexport default UserAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAccount\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/UserAccount/index.js"],"names":["Button","EditIcon","CameraIcon","current","InputCustom","UploadButton","DEFAULTS","MAX","cloudinaryImgOptimize","PropTypes","React","useRef","useState","useDispatch","useSelector","setMessage","useStyle","UserAccount","onUpload","onUpdateProfile","email","createdDate","userInfo","state","username","name","avt","coin","avtSrc","Boolean","IMAGE_SRC","classes","editMode","setEditMode","inputRef","errors","setErrors","dispatch","handleInputChange","v","type","handleCloseEditMode","handleUpdate","currentName","currentUsername","trim","message","indexOf","length","USERNAME_LEN","NAME_LEN","wrap","root","avtWrap","cameraIconWrap","cameraIcon","fileInput","e","target","value","info","editBtn","propTypes","any","string","func"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport { current } from '@reduxjs/toolkit';\nimport InputCustom from 'components/UI/InputCustom';\nimport UploadButton from 'components/UI/UploadButton';\nimport { DEFAULTS, MAX } from 'constant';\nimport { cloudinaryImgOptimize } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport useStyle from './style';\n\nfunction UserAccount({ onUpload, onUpdateProfile, email, createdDate }) {\n  const userInfo = useSelector((state) => state.userInfo);\n  const { username, name, avt, coin } = userInfo;\n  const avtSrc = Boolean(avt)\n    ? cloudinaryImgOptimize(avt, 150, 150)\n    : DEFAULTS.IMAGE_SRC;\n  const classes = useStyle();\n  const [editMode, setEditMode] = useState(false);\n  const inputRef = useRef({ name, username });\n  const [errors, setErrors] = useState({ name: false, username: false });\n  const dispatch = useDispatch();\n\n  const handleInputChange = (v, type = 0) => {\n    if (type) {\n      errors.name && v !== '' && setErrors({ ...errors, name: false });\n      inputRef.current.name = v;\n    } else {\n      errors.username && v !== '' && setErrors({ ...errors, username: false });\n      inputRef.current.username = v;\n    }\n  };\n\n  const handleCloseEditMode = () => {\n    inputRef.current = { name, username };\n    setEditMode(false);\n  };\n\n  const handleUpdate = () => {\n    const { name: currentName, username: currentUsername } = inputRef.current;\n    if (currentName === name.trim() && username === currentUsername.trim()) {\n      return;\n    }\n\n    if (currentName.trim() === '') {\n      setErrors({ ...errors, name: true });\n      dispatch(setMessage({ type: 'error', message: 'Vui lòng nhập tên' }));\n      return;\n    }\n\n    if (currentUsername.trim() === '') {\n      setErrors({ ...errors, username: true });\n      dispatch(\n        setMessage({ type: 'error', message: 'Vui lòng nhập username' }),\n      );\n      return;\n    }\n\n    if (currentUsername.indexOf(' ') !== -1) {\n      setErrors({ ...errors, username: true });\n      dispatch(\n        setMessage({\n          type: 'error',\n          message: 'username không chứa khoảng trống',\n        }),\n      );\n      return;\n    }\n\n    if (currentUsername.length > MAX.USERNAME_LEN) {\n      setErrors({ ...errors, username: true });\n      dispatch(\n        setMessage({\n          type: 'error',\n          message: `username tối đa ${MAX.USERNAME_LEN} ký tự`,\n        }),\n      );\n      return;\n    }\n\n    if (currentName.length > MAX.NAME_LEN) {\n      setErrors({ ...errors, name: true });\n      dispatch(\n        setMessage({\n          type: 'error',\n          message: `Tên tối đa ${MAX.NAME_LEN} ký tự`,\n        }),\n      );\n      return;\n    }\n\n    onUpdateProfile(currentName.trim(), currentUsername.trim());\n  };\n\n  return (\n    <div className={`${classes.wrap} container flex-center`}>\n      <div className={classes.root}>\n        <div className=\"flex-center w-100 h-100\">\n          <div className={classes.avtWrap}>\n            <img\n              className={`${classes.avt} w-100 h-100`}\n              src={avtSrc}\n              alt=\"Avatar Photo\"\n            />\n\n            <div className={`${classes.cameraIconWrap} flex-center`}>\n              <CameraIcon className={classes.cameraIcon} />\n\n              <UploadButton className={classes.fileInput} onChange={onUpload} />\n            </div>\n          </div>\n        </div>\n\n        {!editMode ? (\n          <div className=\"mt-8\">\n            <h2 className={classes.name}>{name}</h2>\n            <h4 className={classes.username}>{username}</h4>\n          </div>\n        ) : (\n          <div className=\"flex-center-col mt-8\">\n            <InputCustom\n              onChange={(e) => handleInputChange(e.target.value, 1)}\n              className=\"mb-8\"\n              placeholder={name}\n              label=\"Nhập tên\"\n              error={errors.name}\n              defaultValue={name}\n            />\n            <InputCustom\n              onChange={(e) => handleInputChange(e.target.value, 0)}\n              placeholder={username}\n              label=\"Nhập username\"\n              error={errors.username}\n              defaultValue={username}\n            />\n          </div>\n        )}\n\n        <div className={classes.info}>\n          {Boolean(email) && <p>{email}</p>}\n          {Boolean(createdDate) && <p>Đã tham gia vào {createdDate}</p>}\n          <p>\n            Số coin hiện tại: <span className={classes.coin}>{coin}</span>\n          </p>\n        </div>\n\n        {!editMode ? (\n          <Button\n            onClick={() => setEditMode(true)}\n            className={`${classes.editBtn} _btn _btn-primary w-100`}\n            startIcon={<EditIcon />}>\n            Chỉnh sửa\n          </Button>\n        ) : (\n          <div className=\"d-flex w-100\">\n            <Button\n              onClick={handleCloseEditMode}\n              className={`${classes.editBtn} _btn _btn-outlined-accent w-50`}>\n              Huỷ bỏ\n            </Button>\n            <Button\n              onClick={handleUpdate}\n              className={`${classes.editBtn} _btn _btn-primary ml-4 w-50`}>\n              Cập nhật\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nUserAccount.propTypes = {\n  createdDate: PropTypes.any,\n  email: PropTypes.string,\n  onUpload: PropTypes.func,\n  onUpdateProfile: PropTypes.func,\n};\n\nexport default UserAccount;\n"]},"metadata":{},"sourceType":"module"}