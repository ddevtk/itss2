{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Contribution/Word/index.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport wordApi from 'apis/wordApi';\nimport InputCustom from 'components/UI/InputCustom';\nimport SelectCustom from 'components/UI/SelectCustom';\nimport TopicSelect from 'components/UI/TopicSelect';\nimport UploadButton from 'components/UI/UploadButton';\nimport { MAX, WORD_LEVELS, WORD_SPECIALTY, WORD_TYPES } from 'constant';\nimport { debounce } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport * as yup from 'yup';\nimport InformationTooltip from './InformationTooltip';\nimport PhoneticInput from './PhoneticInput';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet delayTimer = null;\nconst schema = yup.object().shape({\n  word: yup.string().trim().required('Hãy nhập một từ vào đây').lowercase().max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup.string().trim().lowercase().required('Hãy nhập ý nghĩa từ').max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup.string().trim().lowercase().required('Hãy nhập ký âm của từ').max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup.string().required('Chọn loại của từ').oneOf(WORD_TYPES.map(i => i.value)),\n  level: yup.string().required('Chọn cấp bậc của từ').oneOf(WORD_LEVELS.map(i => i.value)),\n  specialty: yup.string().required('Chọn cấp bậc của từ').oneOf(WORD_SPECIALTY.map(i => i.value)),\n  examples: yup.string().max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  antonyms: yup.string().max(MAX.SYNONYMS_WORD_LEN, `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`),\n  note: yup.string().max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`)\n}); // Prevent unmount component topic select\n\nconst ButtonWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12,\n  md: 6,\n  lg: 4\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 34\n}, this);\n\n_c = ButtonWrapper;\n\nconst TagsWrapper = props => /*#__PURE__*/_jsxDEV(Grid, { ...props,\n  item: true,\n  xs: 12\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 32\n}, this);\n\n_c2 = TagsWrapper;\n\nfunction WordContribution(_ref) {\n  _s();\n\n  var _errors$word, _errors$mean, _errors$phonetic, _errors$type, _errors$level, _errors$specialty, _errors$examples, _errors$synonyms, _errors$antonyms, _errors$note;\n\n  let {\n    onSubmitForm,\n    submitting\n  } = _ref;\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    getValues\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const topics = useRef([]);\n  const picture = useRef(null);\n\n  const onSubmit = data => {\n    onSubmitForm({ ...data,\n      topics: topics.current,\n      picture: picture.current\n    });\n  };\n\n  const onResetForm = () => {\n    const initialValues = {\n      word: '',\n      mean: '',\n      phonetic: '',\n      type: 'n',\n      level: 'A1',\n      specialty: '0',\n      examples: '',\n      synonyms: '',\n      antonyms: '',\n      note: ''\n    };\n    topics.current = [];\n    picture.current = null;\n    reset(initialValues);\n    setResetFlag(Math.random() + 1);\n  };\n\n  const handleCheckWordExistence = (eWord, eType) => {\n    delayTimer = debounce(delayTimer, async () => {\n      try {\n        var _eWord$target, _eType$target;\n\n        const word = eWord ? (_eWord$target = eWord.target) === null || _eWord$target === void 0 ? void 0 : _eWord$target.value : getValues('word'),\n              type = eType ? (_eType$target = eType.target) === null || _eType$target === void 0 ? void 0 : _eType$target.value : getValues('type');\n        const apiRes = await wordApi.getCheckWordExistence(word, type);\n\n        if (apiRes.status === 200) {\n          const {\n            isExist = false\n          } = apiRes.data;\n\n          if (isExist) {\n            dispatch(setMessage({\n              type: 'warning',\n              message: `Từ ${word} (${type}) đã tồn tại trong Hama !`,\n              duration: 2000\n            }));\n          }\n        }\n      } catch (error) {}\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"Th\\xEAm t\\u1EEB m\\u1EDBi c\\u1EE7a b\\u1EA1n v\\xE0o Hama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.grid,\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"T\\u1EEB m\\u1EDBi (*)\",\n            error: Boolean(errors.word),\n            inputProps: {\n              autoFocus: true,\n              maxLength: MAX.WORD_LEN,\n              name: 'word',\n              ...register('word')\n            },\n            onChange: e => handleCheckWordExistence(e, null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), errors.word && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$word = errors.word) === null || _errors$word === void 0 ? void 0 : _errors$word.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Ngh\\u0129a c\\u1EE7a t\\u1EEB (*)\",\n            error: Boolean(errors.mean),\n            inputProps: {\n              maxLength: MAX.MEAN_WORD_LEN,\n              name: 'mean',\n              ...register('mean')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), errors.mean && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$mean = errors.mean) === null || _errors$mean === void 0 ? void 0 : _errors$mean.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PhoneticInput, {\n          errorMessage: (_errors$phonetic = errors.phonetic) === null || _errors$phonetic === void 0 ? void 0 : _errors$phonetic.message,\n          error: Boolean(errors.phonetic),\n          resetFlag: resetFlag,\n          inputProps: {\n            maxLength: MAX.PHONETIC_LEN,\n            name: 'phonetic'\n          },\n          register: register('phonetic')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Lo\\u1EA1i t\\u1EEB (*)\",\n            options: WORD_TYPES,\n            error: Boolean(errors.type),\n            resetFlag: resetFlag,\n            inputProps: {\n              name: 'type',\n              ...register('type')\n            },\n            onChange: e => handleCheckWordExistence(null, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), errors.type && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$type = errors.type) === null || _errors$type === void 0 ? void 0 : _errors$type.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"C\\u1EA5p b\\u1EADc c\\u1EE7a t\\u1EEB (*)\",\n            options: WORD_LEVELS,\n            error: Boolean(errors.level),\n            resetFlag: resetFlag,\n            inputProps: {\n              name: 'level',\n              ...register('level')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), errors.level && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$level = errors.level) === null || _errors$level === void 0 ? void 0 : _errors$level.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(SelectCustom, {\n            className: \"w-100\",\n            label: \"Thu\\u1ED9c chuy\\xEAn ng\\xE0nh\",\n            options: WORD_SPECIALTY,\n            error: Boolean(errors.specialty),\n            resetFlag: resetFlag,\n            inputProps: {\n              name: 'specialty',\n              ...register('specialty')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), errors.specialty && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$specialty = errors.specialty) === null || _errors$specialty === void 0 ? void 0 : _errors$specialty.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE2u v\\xED d\\u1EE5\",\n            multiline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Th\\xEAm c\\xE1c c\\xE2u v\\xED d\\u1EE5 cho t\\u1EEB tr\\xEAn. \\u0110\\u1EA3m b\\u1EA3o c\\xF3 s\\u1EF1 xu\\u1EA5t hi\\u1EC7n c\\u1EE7a t\\u1EEB \\u0111\\xF3 trong c\\xE2u. B\\u1EA1n c\\xF3 th\\u1EC3 th\\xEAm nhi\\u1EC1u c\\xE2u b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this),\n            error: Boolean(errors.examples),\n            inputProps: {\n              name: 'examples',\n              ...register('examples')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), errors.examples && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$examples = errors.examples) === null || _errors$examples === void 0 ? void 0 : _errors$examples.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB \\u0111\\u1ED3ng ngh\\u0129a\",\n            multiline: true,\n            error: Boolean(errors.synonyms),\n            inputProps: {\n              name: 'synonyms',\n              ...register('synonyms')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), errors.synonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$synonyms = errors.synonyms) === null || _errors$synonyms === void 0 ? void 0 : _errors$synonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"C\\xE1c t\\u1EEB tr\\xE1i ngh\\u0129a\",\n            multiline: true,\n            error: Boolean(errors.antonyms),\n            inputProps: {\n              name: 'antonyms',\n              ...register('antonyms')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), errors.antonyms && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$antonyms = errors.antonyms) === null || _errors$antonyms === void 0 ? void 0 : _errors$antonyms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n            className: \"w-100\",\n            label: \"Ghi ch\\xFA\",\n            multiline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InformationTooltip, {\n              title: \"Nh\\u1EADp th\\xEAm ghi ch\\xFA m\\xE0 b\\u1EA1n mu\\u1ED1n cho t\\u1EEB. Th\\xEAm nhi\\u1EC1u d\\xF2ng b\\u1EB1ng c\\xE1ch xu\\u1ED1ng d\\xF2ng.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this),\n            error: Boolean(errors.note),\n            inputProps: {\n              name: 'note',\n              ...register('note')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), errors.note && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-error\",\n            children: (_errors$note = errors.note) === null || _errors$note === void 0 ? void 0 : _errors$note.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(UploadButton, {\n            title: \"Th\\xEAm \\u1EA3nh minh ho\\u1EA1\",\n            className: \"w-100 h-100\",\n            resetFlag: resetFlag,\n            onChange: imgSrc => picture.current = imgSrc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopicSelect, {\n          onChange: topicList => topics.current = topicList,\n          resetFlag: resetFlag,\n          buttonTitle: \"Th\\xEAm ch\\u1EE7 \\u0111\\u1EC1\",\n          buttonWrapper: ButtonWrapper,\n          tagsWrapper: TagsWrapper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dyno-break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-end jus-content-end pt-5 w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.btn} ${classes.btnReset}`,\n          color: \"secondary\",\n          endIcon: /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 22\n          }, this),\n          variant: \"outlined\",\n          disabled: submitting,\n          onClick: onResetForm,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: `${classes.btn} _btn _btn-primary`,\n          disabled: submitting,\n          endIcon: submitting ? /*#__PURE__*/_jsxDEV(LoopIcon, {\n            className: \"ani-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 64\n          }, this),\n          variant: \"contained\",\n          children: \"Th\\xEAm t\\u1EEB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordContribution, \"aQ+9WyJ07ud7+wfeZDulsEZl+JY=\", false, function () {\n  return [useStyle, useDispatch, useForm];\n});\n\n_c3 = WordContribution;\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool\n};\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false\n};\nexport default WordContribution;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"TagsWrapper\");\n$RefreshReg$(_c3, \"WordContribution\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Contribution/Word/index.js"],"names":["yupResolver","Button","Grid","LoopIcon","ResetIcon","SaveIcon","wordApi","InputCustom","SelectCustom","TopicSelect","UploadButton","MAX","WORD_LEVELS","WORD_SPECIALTY","WORD_TYPES","debounce","PropTypes","React","useRef","useState","useForm","useDispatch","setMessage","yup","InformationTooltip","PhoneticInput","useStyle","delayTimer","schema","object","shape","word","string","trim","required","lowercase","max","WORD_LEN","mean","MEAN_WORD_LEN","phonetic","PHONETIC_LEN","type","oneOf","map","i","value","level","specialty","examples","EXAMPLE_WORD_LEN","synonyms","SYNONYMS_WORD_LEN","antonyms","note","NOTE_WORD_LEN","ButtonWrapper","props","TagsWrapper","WordContribution","onSubmitForm","submitting","classes","resetFlag","setResetFlag","dispatch","register","handleSubmit","formState","errors","reset","getValues","resolver","topics","picture","onSubmit","data","current","onResetForm","initialValues","Math","random","handleCheckWordExistence","eWord","eType","target","apiRes","getCheckWordExistence","status","isExist","message","duration","error","root","title","grid","Boolean","autoFocus","maxLength","name","e","imgSrc","topicList","btn","btnReset","propTypes","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport wordApi from 'apis/wordApi';\nimport InputCustom from 'components/UI/InputCustom';\nimport SelectCustom from 'components/UI/SelectCustom';\nimport TopicSelect from 'components/UI/TopicSelect';\nimport UploadButton from 'components/UI/UploadButton';\nimport { MAX, WORD_LEVELS, WORD_SPECIALTY, WORD_TYPES } from 'constant';\nimport { debounce } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport * as yup from 'yup';\nimport InformationTooltip from './InformationTooltip';\nimport PhoneticInput from './PhoneticInput';\nimport useStyle from './style';\n\nlet delayTimer = null;\n\nconst schema = yup.object().shape({\n  word: yup\n    .string()\n    .trim()\n    .required('Hãy nhập một từ vào đây')\n    .lowercase()\n    .max(MAX.WORD_LEN, `Từ dài tối đã ${MAX.WORD_LEN} ký tự`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required('Hãy nhập ý nghĩa từ')\n    .max(MAX.MEAN_WORD_LEN, `Từ dài tối đã ${MAX.MEAN_WORD_LEN} ký tự`),\n  phonetic: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required('Hãy nhập ký âm của từ')\n    .max(MAX.PHONETIC_LEN, `Từ dài tối đã ${MAX.PHONETIC_LEN} ký tự`),\n  type: yup\n    .string()\n    .required('Chọn loại của từ')\n    .oneOf(WORD_TYPES.map((i) => i.value)),\n  level: yup\n    .string()\n    .required('Chọn cấp bậc của từ')\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\n  specialty: yup\n    .string()\n    .required('Chọn cấp bậc của từ')\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\n  examples: yup\n    .string()\n    .max(MAX.EXAMPLE_WORD_LEN, `Ví dụ tối đa ${MAX.EXAMPLE_WORD_LEN} ký tự`),\n  synonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ đồng nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`,\n    ),\n  antonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Từ trái nghĩa tối đa ${MAX.SYNONYMS_WORD_LEN} ký tự`,\n    ),\n  note: yup\n    .string()\n    .max(MAX.NOTE_WORD_LEN, `Ghi chú tối đa ${MAX.NOTE_WORD_LEN} ký tự`),\n});\n\n// Prevent unmount component topic select\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction WordContribution({ onSubmitForm, submitting }) {\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    getValues,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const topics = useRef([]);\n  const picture = useRef(null);\n\n  const onSubmit = (data) => {\n    onSubmitForm({ ...data, topics: topics.current, picture: picture.current });\n  };\n\n  const onResetForm = () => {\n    const initialValues = {\n      word: '',\n      mean: '',\n      phonetic: '',\n      type: 'n',\n      level: 'A1',\n      specialty: '0',\n      examples: '',\n      synonyms: '',\n      antonyms: '',\n      note: '',\n    };\n    topics.current = [];\n    picture.current = null;\n    reset(initialValues);\n    setResetFlag(Math.random() + 1);\n  };\n\n  const handleCheckWordExistence = (eWord, eType) => {\n    delayTimer = debounce(\n      delayTimer,\n      async () => {\n        try {\n          const word = eWord ? eWord.target?.value : getValues('word'),\n            type = eType ? eType.target?.value : getValues('type');\n\n          const apiRes = await wordApi.getCheckWordExistence(word, type);\n          if (apiRes.status === 200) {\n            const { isExist = false } = apiRes.data;\n            if (isExist) {\n              dispatch(\n                setMessage({\n                  type: 'warning',\n                  message: `Từ ${word} (${type}) đã tồn tại trong Hama !`,\n                  duration: 2000,\n                }),\n              );\n            }\n          }\n        } catch (error) {}\n      },\n      1000,\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>Thêm từ mới của bạn vào Hama</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new word */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Từ mới (*)\"\n              error={Boolean(errors.word)}\n              inputProps={{\n                autoFocus: true,\n                maxLength: MAX.WORD_LEN,\n                name: 'word',\n                ...register('word'),\n              }}\n              onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.word && (\n              <p className=\"text-error\">{errors.word?.message}</p>\n            )}\n          </Grid>\n\n          {/* mean */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Nghĩa của từ (*)\"\n              error={Boolean(errors.mean)}\n              inputProps={{\n                maxLength: MAX.MEAN_WORD_LEN,\n                name: 'mean',\n                ...register('mean'),\n              }}\n            />\n            {errors.mean && (\n              <p className=\"text-error\">{errors.mean?.message}</p>\n            )}\n          </Grid>\n\n          {/* phonetic */}\n          <PhoneticInput\n            errorMessage={errors.phonetic?.message}\n            error={Boolean(errors.phonetic)}\n            resetFlag={resetFlag}\n            inputProps={{\n              maxLength: MAX.PHONETIC_LEN,\n              name: 'phonetic',\n            }}\n            register={register('phonetic')}\n          />\n\n          {/* word type */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Loại từ (*)\"\n              options={WORD_TYPES}\n              error={Boolean(errors.type)}\n              resetFlag={resetFlag}\n              inputProps={{\n                name: 'type',\n                ...register('type'),\n              }}\n              onChange={(e) => handleCheckWordExistence(null, e)}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.type?.message}</p>\n            )}\n          </Grid>\n\n          {/* word level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Cấp bậc của từ (*)\"\n              options={WORD_LEVELS}\n              error={Boolean(errors.level)}\n              resetFlag={resetFlag}\n              inputProps={{ name: 'level', ...register('level') }}\n            />\n            {errors.level && (\n              <p className=\"text-error\">{errors.level?.message}</p>\n            )}\n          </Grid>\n\n          {/* word specialty */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Thuộc chuyên ngành\"\n              options={WORD_SPECIALTY}\n              error={Boolean(errors.specialty)}\n              resetFlag={resetFlag}\n              inputProps={{\n                name: 'specialty',\n                ...register('specialty'),\n              }}\n            />\n            {errors.specialty && (\n              <p className=\"text-error\">{errors.specialty?.message}</p>\n            )}\n          </Grid>\n\n          {/* examples */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Câu ví dụ\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Thêm các câu ví dụ cho từ trên. Đảm bảo có sự xuất hiện của từ đó trong câu. Bạn có thể thêm nhiều câu bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.examples)}\n              inputProps={{\n                name: 'examples',\n                ...register('examples'),\n              }}\n            />\n\n            {errors.examples && (\n              <p className=\"text-error\">{errors.examples?.message}</p>\n            )}\n          </Grid>\n\n          {/* synonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ đồng nghĩa\"\n              multiline\n              error={Boolean(errors.synonyms)}\n              inputProps={{\n                name: 'synonyms',\n                ...register('synonyms'),\n              }}\n            />\n            {errors.synonyms && (\n              <p className=\"text-error\">{errors.synonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* antonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Các từ trái nghĩa\"\n              multiline\n              error={Boolean(errors.antonyms)}\n              inputProps={{\n                name: 'antonyms',\n                ...register('antonyms'),\n              }}\n            />\n            {errors.antonyms && (\n              <p className=\"text-error\">{errors.antonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* note */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Ghi chú\"\n              multiline\n              endAdornment={\n                <InformationTooltip title=\"Nhập thêm ghi chú mà bạn muốn cho từ. Thêm nhiều dòng bằng cách xuống dòng.\" />\n              }\n              error={Boolean(errors.note)}\n              inputProps={{\n                name: 'note',\n                ...register('note'),\n              }}\n            />\n            {errors.note && (\n              <p className=\"text-error\">{errors.note?.message}</p>\n            )}\n          </Grid>\n\n          {/* picture */}\n          <Grid item xs={12} md={6} lg={4}>\n            <UploadButton\n              title=\"Thêm ảnh minh hoạ\"\n              className=\"w-100 h-100\"\n              resetFlag={resetFlag}\n              onChange={(imgSrc) => (picture.current = imgSrc)}\n            />\n          </Grid>\n\n          {/* word topics */}\n          <TopicSelect\n            onChange={(topicList) => (topics.current = topicList)}\n            resetFlag={resetFlag}\n            buttonTitle=\"Thêm chủ đề\"\n            buttonWrapper={ButtonWrapper}\n            tagsWrapper={TagsWrapper}\n          />\n        </Grid>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={onResetForm}>\n            Reset\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\">\n            Thêm từ\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default WordContribution;\n"]},"metadata":{},"sourceType":"module"}