{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/PlayGames/FastGame/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport Speaker from 'components/UI/Speaker';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useStyle from './style';\nimport winAudioSrc from 'assets/audios/win.mp3';\nimport { onPlayAudio } from 'helper/speaker.helper';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport highscoreApi from 'apis/highscoreApi';\nimport accountApi from 'apis/accountApi';\nimport { setUserCoin } from 'redux/slices/userInfo.slice';\nimport { HIGHSCORE_NAME } from 'constant/game';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_TIME = 60000;\nconst RESET_TIME = 250;\nconst MINUS_TIME = 2000;\nconst ADD_TIME = MINUS_TIME * 1.5;\nconst CORRECT_SCORE = 10;\nconst WRONG_SCORE = 5;\nconst SCORE_PER_SEC = 5;\n\nfunction generateAnswerList() {\n  let list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let word = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const index = list.findIndex(i => (i === null || i === void 0 ? void 0 : i.word.toLowerCase()) === word.toLowerCase());\n  let seedList = [...list.slice(0, index), ...list.slice(index + 1)];\n  seedList = seedList.sort(() => Math.random() - 0.5).slice(0, 8);\n  seedList.push(list[index]);\n  return seedList.sort(() => Math.random() - 0.5);\n}\n\nfunction TimeBar(_ref) {\n  _s();\n\n  let {\n    correctFlag,\n    wrongFlag,\n    onSaveTime,\n    onTimeout\n  } = _ref;\n  const classes = useStyle();\n  const [restTime, setRestTime] = useState(TOTAL_TIME);\n  const percent = Math.round(restTime / TOTAL_TIME * 100);\n  const minute = ~~(restTime / 60000);\n  const second = `0${~~(restTime / 1000) % 60}`.slice(-2);\n  useEffect(() => {\n    onSaveTime(restTime);\n    const intervalId = setInterval(() => {\n      const newRestTime = restTime - RESET_TIME;\n\n      if (newRestTime <= 0) {\n        onTimeout();\n        clearInterval(intervalId);\n        onSaveTime(0);\n        return;\n      }\n\n      setRestTime(newRestTime);\n    }, RESET_TIME);\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [restTime]); // When correct\n\n  useEffect(() => {\n    // pass the first render\n    if (!correctFlag) {\n      return;\n    }\n\n    const newRestTime = restTime + ADD_TIME;\n\n    if (newRestTime < TOTAL_TIME) {\n      setRestTime(newRestTime);\n    } else {\n      setRestTime(TOTAL_TIME);\n    }\n  }, [correctFlag]); // When wrong\n\n  useEffect(() => {\n    // pass the first render\n    if (!wrongFlag) {\n      return;\n    }\n\n    const newRestTime = restTime - MINUS_TIME;\n\n    if (newRestTime) {\n      setRestTime(newRestTime);\n    } else {\n      onTimeout();\n    }\n  }, [wrongFlag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.timerWrap,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.timeStr,\n      children: `${minute}:${second}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.timer,\n      style: {\n        width: `${percent}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimeBar, \"WHs6nXgRGZ4WW3YI2vZHgJRXZjI=\", false, function () {\n  return [useStyle];\n});\n\n_c = TimeBar;\n\nfunction Result(_ref2) {\n  _s2();\n\n  let {\n    score\n  } = _ref2;\n  const classes = useStyle();\n  const history = useHistory();\n  const {\n    isAuth,\n    coin\n  } = useSelector(state => state.userInfo);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isAuth) return;\n\n    (async function () {\n      try {\n        const newCoin = coin + score;\n        highscoreApi.putUpdateHighscore(HIGHSCORE_NAME.FAST_GAME, score);\n        const apiRes = await accountApi.putUpdateUserCoin(newCoin);\n\n        if (apiRes.status === 200) {\n          dispatch(setUserCoin(newCoin));\n        }\n      } catch (error) {}\n    })();\n\n    return () => {};\n  }, []); // play win audio\n\n  useEffect(() => {\n    onPlayAudio(winAudioSrc);\n  }, []);\n\n  const onGoBack = () => {\n    history.push('/');\n  };\n\n  const onReplay = () => {\n    location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 h-100 flex-center flex-dir-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.doneTitle,\n      children: \"K\\u1EBFt th\\xFAc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.doneResult,\n      children: [\"\\u0110i\\u1EC3m c\\u1EE7a b\\u1EA1n l\\xE0: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"_btn _btn-outlined-stand mr-5\",\n        variant: \"outlined\",\n        onClick: onGoBack,\n        children: \"Quay v\\u1EC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"_btn _btn-primary\",\n        onClick: onReplay,\n        children: \"Ch\\u01A1i l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Result, \"vM2op+i8ZUz1gohdWZExNjVv1JU=\", false, function () {\n  return [useStyle, useHistory, useSelector, useDispatch];\n});\n\n_c2 = Result;\n\nfunction FastGame(_ref3) {\n  _s3();\n\n  let {\n    list\n  } = _ref3;\n  const classes = useStyle();\n  const currentIndex = useRef(0);\n  const [word, setWord] = useState(list[currentIndex.current].word);\n  const [answerList, setAnswerList] = useState(generateAnswerList(list, word));\n  const [score, setScore] = useState(0);\n  const restTime = useRef(TOTAL_TIME);\n  const [isDone, setIsDone] = useState(false);\n\n  const onDone = () => {\n    setScore(score + ~~(restTime / 1000) * SCORE_PER_SEC);\n    setIsDone(true);\n  }; // flag to increase or decrease time\n\n\n  const [flag, setFlag] = useState({\n    correct: 0,\n    wrong: 0\n  });\n\n  const handleCorrect = () => {\n    if (currentIndex.current >= list.length - 1) {\n      onDone();\n      return;\n    }\n\n    const newWord = list[currentIndex.current + 1].word;\n    const newAnswerList = generateAnswerList(list, newWord);\n    setWord(newWord);\n    setAnswerList([...newAnswerList]);\n    currentIndex.current++;\n    setFlag({ ...flag,\n      correct: flag.correct + 1\n    });\n    setScore(score + CORRECT_SCORE);\n  };\n\n  const handleWrong = removeIndex => {\n    const newAnswerList = [...answerList];\n    delete newAnswerList[removeIndex];\n    setAnswerList([...newAnswerList]);\n    setFlag({ ...flag,\n      wrong: flag.wrong + 1\n    });\n    setScore(score - WRONG_SCORE);\n  };\n\n  const handleAnswer = (answer, index) => {\n    const isCorrect = answer.toLowerCase() === word.toLowerCase();\n\n    if (isCorrect) {\n      handleCorrect();\n    } else {\n      handleWrong(index);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-dir-col h-100\",\n    children: !isDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${classes.nTotal} flex-center`,\n          children: [\"C\\xE2u\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentIndex.current + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 24\n          }, this), \"\\xA0/\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: list.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ` - Điểm: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TooltipCustom, {\n            className: \"ml-5 cur-pointer\",\n            title: `Chọn hình ảnh đúng với nghĩa của từ. Chọn sai -${WRONG_SCORE}đ, đúng +${CORRECT_SCORE}đ. Điểm sẽ được cộng thêm với thời gian còn lại của bạn.`,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-8\",\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Speaker, {\n            text: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex-grow-1 ${classes.answerList}`,\n        children: answerList.map((item, index) => {\n          if (item && item.picture) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.answerItem,\n              onClick: () => handleAnswer(item.word, index),\n              children: item.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.picture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 38\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.answerItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimeBar, {\n        correctFlag: flag.correct,\n        wrongFlag: flag.wrong,\n        onSaveTime: time => restTime.current = time,\n        onTimeout: onDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Result, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(FastGame, \"bzSXp+ft2S3XP1kkmnLWmgJLUak=\", false, function () {\n  return [useStyle];\n});\n\n_c3 = FastGame;\nexport default FastGame;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TimeBar\");\n$RefreshReg$(_c2, \"Result\");\n$RefreshReg$(_c3, \"FastGame\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/PlayGames/FastGame/index.js"],"names":["InfoIcon","Speaker","TooltipCustom","React","useEffect","useRef","useState","useStyle","winAudioSrc","onPlayAudio","Button","useHistory","highscoreApi","accountApi","setUserCoin","HIGHSCORE_NAME","useDispatch","useSelector","TOTAL_TIME","RESET_TIME","MINUS_TIME","ADD_TIME","CORRECT_SCORE","WRONG_SCORE","SCORE_PER_SEC","generateAnswerList","list","word","index","findIndex","i","toLowerCase","seedList","slice","sort","Math","random","push","TimeBar","correctFlag","wrongFlag","onSaveTime","onTimeout","classes","restTime","setRestTime","percent","round","minute","second","intervalId","setInterval","newRestTime","clearInterval","timerWrap","timeStr","timer","width","Result","score","history","isAuth","coin","state","userInfo","dispatch","newCoin","putUpdateHighscore","FAST_GAME","apiRes","putUpdateUserCoin","status","error","onGoBack","onReplay","location","reload","doneTitle","doneResult","FastGame","currentIndex","setWord","current","answerList","setAnswerList","setScore","isDone","setIsDone","onDone","flag","setFlag","correct","wrong","handleCorrect","length","newWord","newAnswerList","handleWrong","removeIndex","handleAnswer","answer","isCorrect","title","nTotal","map","item","picture","answerItem","time"],"mappings":"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","sourcesContent":["import InfoIcon from '@material-ui/icons/Info';\nimport Speaker from 'components/UI/Speaker';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useStyle from './style';\nimport winAudioSrc from 'assets/audios/win.mp3';\nimport { onPlayAudio } from 'helper/speaker.helper';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport highscoreApi from 'apis/highscoreApi';\nimport accountApi from 'apis/accountApi';\nimport { setUserCoin } from 'redux/slices/userInfo.slice';\nimport { HIGHSCORE_NAME } from 'constant/game';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst TOTAL_TIME = 60_000;\nconst RESET_TIME = 250;\nconst MINUS_TIME = 2000;\nconst ADD_TIME = MINUS_TIME * 1.5;\nconst CORRECT_SCORE = 10;\nconst WRONG_SCORE = 5;\nconst SCORE_PER_SEC = 5;\n\nfunction generateAnswerList(list = [], word = '') {\n  const index = list.findIndex(\n    (i) => i?.word.toLowerCase() === word.toLowerCase(),\n  );\n  let seedList = [...list.slice(0, index), ...list.slice(index + 1)];\n  seedList = seedList.sort(() => Math.random() - 0.5).slice(0, 8);\n  seedList.push(list[index]);\n\n  return seedList.sort(() => Math.random() - 0.5);\n}\n\nfunction TimeBar({ correctFlag, wrongFlag, onSaveTime, onTimeout }) {\n  const classes = useStyle();\n  const [restTime, setRestTime] = useState(TOTAL_TIME);\n  const percent = Math.round((restTime / TOTAL_TIME) * 100);\n  const minute = ~~(restTime / 60_000);\n  const second = `0${~~(restTime / 1_000) % 60}`.slice(-2);\n\n  useEffect(() => {\n    onSaveTime(restTime);\n\n    const intervalId = setInterval(() => {\n      const newRestTime = restTime - RESET_TIME;\n      if (newRestTime <= 0) {\n        onTimeout();\n        clearInterval(intervalId);\n        onSaveTime(0);\n        return;\n      }\n      setRestTime(newRestTime);\n    }, RESET_TIME);\n\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [restTime]);\n\n  // When correct\n  useEffect(() => {\n    // pass the first render\n    if (!correctFlag) {\n      return;\n    }\n\n    const newRestTime = restTime + ADD_TIME;\n    if (newRestTime < TOTAL_TIME) {\n      setRestTime(newRestTime);\n    } else {\n      setRestTime(TOTAL_TIME);\n    }\n  }, [correctFlag]);\n\n  // When wrong\n  useEffect(() => {\n    // pass the first render\n    if (!wrongFlag) {\n      return;\n    }\n\n    const newRestTime = restTime - MINUS_TIME;\n    if (newRestTime) {\n      setRestTime(newRestTime);\n    } else {\n      onTimeout();\n    }\n  }, [wrongFlag]);\n\n  return (\n    <div className={classes.timerWrap}>\n      <span className={classes.timeStr}>{`${minute}:${second}`}</span>\n      <div className={classes.timer} style={{ width: `${percent}%` }}></div>\n    </div>\n  );\n}\n\nfunction Result({ score }) {\n  const classes = useStyle();\n  const history = useHistory();\n  const { isAuth, coin } = useSelector((state) => state.userInfo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isAuth) return;\n\n    (async function () {\n      try {\n        const newCoin = coin + score;\n\n        highscoreApi.putUpdateHighscore(HIGHSCORE_NAME.FAST_GAME, score);\n\n        const apiRes = await accountApi.putUpdateUserCoin(newCoin);\n        if (apiRes.status === 200) {\n          dispatch(setUserCoin(newCoin));\n        }\n      } catch (error) {}\n    })();\n    return () => {};\n  }, []);\n\n  // play win audio\n  useEffect(() => {\n    onPlayAudio(winAudioSrc);\n  }, []);\n\n  const onGoBack = () => {\n    history.push('/');\n  };\n\n  const onReplay = () => {\n    location.reload();\n  };\n\n  return (\n    <div className=\"w-100 h-100 flex-center flex-dir-col\">\n      <h2 className={classes.doneTitle}>Kết thúc</h2>\n      <div className={classes.doneResult}>Điểm của bạn là: {score}</div>\n      <div className=\"mt-10\">\n        <Button\n          className=\"_btn _btn-outlined-stand mr-5\"\n          variant=\"outlined\"\n          onClick={onGoBack}>\n          Quay về\n        </Button>\n        <Button className=\"_btn _btn-primary\" onClick={onReplay}>\n          Chơi lại\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FastGame({ list }) {\n  const classes = useStyle();\n  const currentIndex = useRef(0);\n  const [word, setWord] = useState(list[currentIndex.current].word);\n  const [answerList, setAnswerList] = useState(generateAnswerList(list, word));\n  const [score, setScore] = useState(0);\n  const restTime = useRef(TOTAL_TIME);\n  const [isDone, setIsDone] = useState(false);\n\n  const onDone = () => {\n    setScore(score + ~~(restTime / 1000) * SCORE_PER_SEC);\n    setIsDone(true);\n  };\n\n  // flag to increase or decrease time\n  const [flag, setFlag] = useState({\n    correct: 0,\n    wrong: 0,\n  });\n\n  const handleCorrect = () => {\n    if (currentIndex.current >= list.length - 1) {\n      onDone();\n      return;\n    }\n\n    const newWord = list[currentIndex.current + 1].word;\n    const newAnswerList = generateAnswerList(list, newWord);\n\n    setWord(newWord);\n    setAnswerList([...newAnswerList]);\n    currentIndex.current++;\n\n    setFlag({ ...flag, correct: flag.correct + 1 });\n    setScore(score + CORRECT_SCORE);\n  };\n\n  const handleWrong = (removeIndex) => {\n    const newAnswerList = [...answerList];\n    delete newAnswerList[removeIndex];\n\n    setAnswerList([...newAnswerList]);\n    setFlag({ ...flag, wrong: flag.wrong + 1 });\n    setScore(score - WRONG_SCORE);\n  };\n\n  const handleAnswer = (answer, index) => {\n    const isCorrect = answer.toLowerCase() === word.toLowerCase();\n    if (isCorrect) {\n      handleCorrect();\n    } else {\n      handleWrong(index);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-dir-col h-100\">\n      {!isDone ? (\n        <>\n          <div className={classes.title}>\n            <p className={`${classes.nTotal} flex-center`}>\n              Câu&nbsp;<span>{currentIndex.current + 1}</span>&nbsp;/&nbsp;\n              <span>{list.length}</span>\n              <span>{` - Điểm: ${score}`}</span>\n              <TooltipCustom\n                className=\"ml-5 cur-pointer\"\n                title={`Chọn hình ảnh đúng với nghĩa của từ. Chọn sai -${WRONG_SCORE}đ, đúng +${CORRECT_SCORE}đ. Điểm sẽ được cộng thêm với thời gian còn lại của bạn.`}>\n                <InfoIcon />\n              </TooltipCustom>\n            </p>\n            <h1 className=\"flex-center\">\n              <span className=\"mr-8\">{word}</span> <Speaker text={word} />\n            </h1>\n          </div>\n          <div className={`flex-grow-1 ${classes.answerList}`}>\n            {answerList.map((item, index) => {\n              if (item && item.picture) {\n                return (\n                  <div\n                    key={index}\n                    className={classes.answerItem}\n                    onClick={() => handleAnswer(item.word, index)}>\n                    {item.picture && <img src={item.picture} />}\n                  </div>\n                );\n              }\n              return <div key={index} className={classes.answerItem}></div>;\n            })}\n          </div>\n\n          <TimeBar\n            correctFlag={flag.correct}\n            wrongFlag={flag.wrong}\n            onSaveTime={(time) => (restTime.current = time)}\n            onTimeout={onDone}\n          />\n        </>\n      ) : (\n        <Result score={score} />\n      )}\n    </div>\n  );\n}\n\nexport default FastGame;\n"]},"metadata":{},"sourceType":"module"}