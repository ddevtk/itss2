{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/CommunicationPhrase/index.js\",\n    _s = $RefreshSig$();\n\nimport LoopIcon from '@material-ui/icons/Loop';\nimport DynoDictionarySkeleton from 'components/DynoDictionary/Skeleton';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport CommunicationPhraseItem from './Item';\nimport SentenceTopicSettingModal from './SettingModal';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommunicationPhrase(_ref) {\n  _s();\n\n  let {\n    isFirstLoad,\n    loading,\n    more,\n    list,\n    onLoadData,\n    onSelectTopic\n  } = _ref;\n  const classes = useStyle();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} dyno-container`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dyno-title\",\n        children: \"1000+ C\\u1EE5m t\\u1EEB giao ti\\u1EBFp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SentenceTopicSettingModal, {\n        onSelectTopic: onSelectTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dyno-break\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentWrap,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.listWrap} w-100`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"dictionaryId\",\n          className: `${classes.list} flex-col w-100`,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isFirstLoad ? /*#__PURE__*/_jsxDEV(DynoDictionarySkeleton, {\n              className: classes.skeleton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: list && list.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: classes.listItem,\n                  children: /*#__PURE__*/_jsxDEV(CommunicationPhraseItem, { ...item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 25\n                }, this)), !loading && more && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n                  onTouchAnchor: onLoadData,\n                  threshold: 1,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-100 t-center\",\n                    children: /*#__PURE__*/_jsxDEV(LoopIcon, {\n                      className: \"ani-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) :\n              /*#__PURE__*/\n              // empty list\n              _jsxDEV(\"h3\", {\n                className: \"notfound-title h-100 flex-center t-center\",\n                children: \"Kh\\xF4ng t\\xECm th\\u1EA5y c\\u1EE5m t\\u1EEB n\\xE0o trong t\\u1EEB \\u0111i\\u1EC3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommunicationPhrase, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = CommunicationPhrase;\nCommunicationPhrase.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSelectTopic: PropTypes.func\n};\nCommunicationPhrase.defaultProps = {\n  more: false,\n  loading: false,\n  isFirstLoad: false,\n  list: [],\n  onLoadData: function () {},\n  onSelectTopic: function () {}\n};\nexport default CommunicationPhrase;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommunicationPhrase\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/CommunicationPhrase/index.js"],"names":["LoopIcon","DynoDictionarySkeleton","InfiniteScroll","PropTypes","React","CommunicationPhraseItem","SentenceTopicSettingModal","useStyle","CommunicationPhrase","isFirstLoad","loading","more","list","onLoadData","onSelectTopic","classes","root","contentWrap","listWrap","skeleton","length","map","item","index","listItem","propTypes","bool","array","func","defaultProps"],"mappings":"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","sourcesContent":["import LoopIcon from '@material-ui/icons/Loop';\nimport DynoDictionarySkeleton from 'components/DynoDictionary/Skeleton';\nimport InfiniteScroll from 'components/UI/InfiniteScroll';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport CommunicationPhraseItem from './Item';\nimport SentenceTopicSettingModal from './SettingModal';\nimport useStyle from './style';\n\nfunction CommunicationPhrase({\n  isFirstLoad,\n  loading,\n  more,\n  list,\n  onLoadData,\n  onSelectTopic,\n}) {\n  const classes = useStyle();\n\n  return (\n    <div className={`${classes.root} dyno-container`}>\n      {/* title - menu */}\n      <div className=\"flex-center-between\">\n        <h1 className=\"dyno-title\">1000+ Cụm từ giao tiếp</h1>\n        <SentenceTopicSettingModal onSelectTopic={onSelectTopic} />\n      </div>\n      <div className=\"dyno-break\"></div>\n\n      {/* list content */}\n      <div className={classes.contentWrap}>\n        <div className={`${classes.listWrap} w-100`}>\n          <ul id=\"dictionaryId\" className={`${classes.list} flex-col w-100`}>\n            <>\n              {isFirstLoad ? (\n                <DynoDictionarySkeleton className={classes.skeleton} />\n              ) : (\n                <>\n                  {list && list.length > 0 ? (\n                    <>\n                      {/* render list */}\n                      {list.map((item, index) => (\n                        <li className={classes.listItem} key={index}>\n                          <CommunicationPhraseItem {...item} />\n                        </li>\n                      ))}\n\n                      {/* infinite scrolling */}\n                      {!loading && more && (\n                        <InfiniteScroll\n                          onTouchAnchor={onLoadData}\n                          threshold={1}>\n                          <div className=\"w-100 t-center\">\n                            <LoopIcon className=\"ani-spin\" />\n                          </div>\n                        </InfiniteScroll>\n                      )}\n                    </>\n                  ) : (\n                    // empty list\n                    <h3 className=\"notfound-title h-100 flex-center t-center\">\n                      Không tìm thấy cụm từ nào trong từ điển\n                    </h3>\n                  )}\n                </>\n              )}\n            </>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCommunicationPhrase.propTypes = {\n  isFirstLoad: PropTypes.bool,\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n  more: PropTypes.bool,\n  onLoadData: PropTypes.func,\n  onSelectTopic: PropTypes.func,\n};\n\nCommunicationPhrase.defaultProps = {\n  more: false,\n  loading: false,\n  isFirstLoad: false,\n  list: [],\n  onLoadData: function () {},\n  onSelectTopic: function () {},\n};\n\nexport default CommunicationPhrase;\n"]},"metadata":{},"sourceType":"module"}