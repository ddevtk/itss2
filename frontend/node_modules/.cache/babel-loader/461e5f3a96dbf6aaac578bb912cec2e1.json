{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/PlayGames/CorrectWord/index.js\",\n    _s = $RefreshSig$();\n\nimport WrongIcon from '@material-ui/icons/Cancel';\nimport RightIcon from '@material-ui/icons/CheckCircle';\nimport logoGame from 'assets/icons/games/correct-word.png';\nimport { UX } from 'constant';\nimport { playSoundAnswer } from 'helper/speaker.helper';\nimport useSpeaker from 'hooks/useSpeaker';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport CorrectWordResult from '../Result';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction shuffleAnswers(word, phonetic, wrongList) {\n  let mergeList = [...wrongList, {\n    word,\n    phonetic\n  }];\n  return mergeList.sort(() => Math.random() - 0.5);\n}\n\nfunction addClassAnswerItem(status, answerIndex, index, word, answer) {\n  if (status !== 0) {\n    if (word === answer) return 'right';\n    if (answerIndex === index) return 'wrong';\n  }\n\n  return '';\n}\n\nfunction CorrectWord(_ref) {\n  _s();\n\n  var _list$, _list$2, _list$3;\n\n  let {\n    list\n  } = _ref;\n  const classes = useStyle();\n  const {\n    voice,\n    speed,\n    volume\n  } = useSpeaker(); // fix Can't perform a React state update on an unmounted component\n\n  const isSubscribe = useRef(true);\n  const [state, setState] = useState({\n    current: 0,\n    nRight: 0,\n    nWrong: 0,\n    // status 0 - reading question, 1 - show right result, 2 - show wrong result\n    status: 0,\n    answerList: shuffleAnswers((_list$ = list[0]) === null || _list$ === void 0 ? void 0 : _list$.word, (_list$2 = list[0]) === null || _list$2 === void 0 ? void 0 : _list$2.phonetic, (_list$3 = list[0]) === null || _list$3 === void 0 ? void 0 : _list$3.wrongList),\n    answerIndex: -1\n  });\n  const [isDone, setIsDone] = useState(false);\n  const nQuestion = list.length;\n  const {\n    status,\n    current,\n    nRight,\n    nWrong,\n    answerList,\n    answerIndex\n  } = state;\n  const {\n    word,\n    mean\n  } = list[state.current];\n  const nRightConsecutive = useRef({\n    top: 0,\n    n: 0\n  }); // fix Can't perform a React state update on an unmounted component\n\n  useEffect(() => {\n    return () => isSubscribe.current = false;\n  }, []);\n\n  const onAnswer = (answer, answerIndex) => {\n    if (answer === word) {\n      playSoundAnswer(word, true, voice, volume, speed);\n      setState({ ...state,\n        nRight: nRight + 1,\n        status: 1,\n        answerIndex\n      });\n      nRightConsecutive.current.n++;\n    } else {\n      playSoundAnswer(word, false, voice, volume, speed);\n      setState({ ...state,\n        nWrong: nWrong + 1,\n        status: 2,\n        answerIndex\n      });\n      const {\n        top,\n        n\n      } = nRightConsecutive.current;\n      if (top < n) nRightConsecutive.current.top = n;\n    } // wait to speak the word if not last question\n\n\n    if (current !== list.length - 1) {\n      setTimeout(() => {\n        var _list, _list2, _list3;\n\n        const newAnswerList = shuffleAnswers((_list = list[current + 1]) === null || _list === void 0 ? void 0 : _list.word, (_list2 = list[current + 1]) === null || _list2 === void 0 ? void 0 : _list2.phonetic, (_list3 = list[current + 1]) === null || _list3 === void 0 ? void 0 : _list3.wrongList);\n        isSubscribe.current && setState(preState => ({ ...preState,\n          status: 0,\n          answerIndex: -1,\n          current: current + 1,\n          answerList: newAnswerList\n        }));\n      }, UX.DELAY_ANSWER);\n    } else {\n      setTimeout(() => {\n        isSubscribe.current && setIsDone(true);\n      }, UX.DELAY_ANSWER);\n    }\n  };\n\n  const handleReplay = () => {\n    var _list$4, _list$5, _list$6;\n\n    setIsDone(false);\n    setState({\n      current: 0,\n      nRight: 0,\n      nWrong: 0,\n      // status 0 - reading question, 1 - show right result, 2 - show wrong result\n      status: 0,\n      answerList: shuffleAnswers((_list$4 = list[0]) === null || _list$4 === void 0 ? void 0 : _list$4.word, (_list$5 = list[0]) === null || _list$5 === void 0 ? void 0 : _list$5.phonetic, (_list$6 = list[0]) === null || _list$6 === void 0 ? void 0 : _list$6.wrongList),\n      answerIndex: -1\n    });\n    nRightConsecutive.current = {\n      top: 0,\n      n: 0\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-center-col h-100vh container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.root} container dyno-game-box`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dyno-game-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoGame,\n          alt: \"game photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"H\\xE3y ch\\u1ECDn t\\u1EEB \\u0111\\xFAng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), !isDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.summary} flex-center-between`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-center--ver\",\n            children: [\"C\\xE2u\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: current + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 26\n            }, this), \"\\xA0/\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: nQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-center--ver\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: nRight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), \"\\xA0\\u0110\\xFAng\", /*#__PURE__*/_jsxDEV(RightIcon, {\n              className: `${classes.summaryIcon} right`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), \"\\xA0-\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: nWrong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), \"\\xA0Sai\", /*#__PURE__*/_jsxDEV(WrongIcon, {\n              className: `${classes.summaryIcon} wrong`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.mainContent} ${status !== 0 ? 'disabled' : 'ani-fade'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-center-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                visibility: status === 0 ? 'hidden' : 'visible'\n              },\n              className: `${classes.result} ${status === 1 ? 'right' : 'wrong'}`,\n              children: status === 1 ? 'Chính xác' : 'Sai rồi'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${classes.question} t-center`,\n              children: mean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.answers,\n            children: answerList.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => onAnswer(answer.word, index),\n              className: `${classes.answerItem} flex-center-col p-5 ${addClassAnswerItem(status, answerIndex, index, word, answer.word)}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-2 t-center\",\n                children: answer.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), answer.phonetic && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"phonetic t-center\",\n                children: [\"/\", answer.phonetic, \"/\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(CorrectWordResult, {\n        onReplay: handleReplay,\n        nRight: nRight,\n        nWrong: nWrong,\n        nRightConsecutive: nRightConsecutive.current.top\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CorrectWord, \"xtr+53TF0aFi28meiqtwV+zRUBo=\", false, function () {\n  return [useStyle, useSpeaker];\n});\n\n_c = CorrectWord;\nCorrectWord.propTypes = {\n  list: PropTypes.array\n};\nCorrectWord.defaultProps = {\n  list: []\n};\nexport default CorrectWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CorrectWord\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/PlayGames/CorrectWord/index.js"],"names":["WrongIcon","RightIcon","logoGame","UX","playSoundAnswer","useSpeaker","PropTypes","React","useEffect","useRef","useState","CorrectWordResult","useStyle","shuffleAnswers","word","phonetic","wrongList","mergeList","sort","Math","random","addClassAnswerItem","status","answerIndex","index","answer","CorrectWord","list","classes","voice","speed","volume","isSubscribe","state","setState","current","nRight","nWrong","answerList","isDone","setIsDone","nQuestion","length","mean","nRightConsecutive","top","n","onAnswer","setTimeout","newAnswerList","preState","DELAY_ANSWER","handleReplay","root","summary","summaryIcon","mainContent","visibility","result","question","answers","map","answerItem","propTypes","array","defaultProps"],"mappings":"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","sourcesContent":["import WrongIcon from '@material-ui/icons/Cancel';\nimport RightIcon from '@material-ui/icons/CheckCircle';\nimport logoGame from 'assets/icons/games/correct-word.png';\nimport { UX } from 'constant';\nimport { playSoundAnswer } from 'helper/speaker.helper';\nimport useSpeaker from 'hooks/useSpeaker';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport CorrectWordResult from '../Result';\nimport useStyle from './style';\n\nfunction shuffleAnswers(word, phonetic, wrongList) {\n  let mergeList = [...wrongList, { word, phonetic }];\n  return mergeList.sort(() => Math.random() - 0.5);\n}\n\nfunction addClassAnswerItem(status, answerIndex, index, word, answer) {\n  if (status !== 0) {\n    if (word === answer) return 'right';\n    if (answerIndex === index) return 'wrong';\n  }\n  return '';\n}\n\nfunction CorrectWord({ list }) {\n  const classes = useStyle();\n  const { voice, speed, volume } = useSpeaker();\n\n  // fix Can't perform a React state update on an unmounted component\n  const isSubscribe = useRef(true);\n\n  const [state, setState] = useState({\n    current: 0,\n    nRight: 0,\n    nWrong: 0,\n    // status 0 - reading question, 1 - show right result, 2 - show wrong result\n    status: 0,\n    answerList: shuffleAnswers(\n      list[0]?.word,\n      list[0]?.phonetic,\n      list[0]?.wrongList,\n    ),\n    answerIndex: -1,\n  });\n  const [isDone, setIsDone] = useState(false);\n\n  const nQuestion = list.length;\n  const { status, current, nRight, nWrong, answerList, answerIndex } = state;\n  const { word, mean } = list[state.current];\n  const nRightConsecutive = useRef({ top: 0, n: 0 });\n\n  // fix Can't perform a React state update on an unmounted component\n  useEffect(() => {\n    return () => (isSubscribe.current = false);\n  }, []);\n\n  const onAnswer = (answer, answerIndex) => {\n    if (answer === word) {\n      playSoundAnswer(word, true, voice, volume, speed);\n      setState({\n        ...state,\n        nRight: nRight + 1,\n        status: 1,\n        answerIndex,\n      });\n      nRightConsecutive.current.n++;\n    } else {\n      playSoundAnswer(word, false, voice, volume, speed);\n      setState({\n        ...state,\n        nWrong: nWrong + 1,\n        status: 2,\n        answerIndex,\n      });\n      const { top, n } = nRightConsecutive.current;\n      if (top < n) nRightConsecutive.current.top = n;\n    }\n\n    // wait to speak the word if not last question\n    if (current !== list.length - 1) {\n      setTimeout(() => {\n        const newAnswerList = shuffleAnswers(\n          list[current + 1]?.word,\n          list[current + 1]?.phonetic,\n          list[current + 1]?.wrongList,\n        );\n\n        isSubscribe.current &&\n          setState((preState) => ({\n            ...preState,\n            status: 0,\n            answerIndex: -1,\n            current: current + 1,\n            answerList: newAnswerList,\n          }));\n      }, UX.DELAY_ANSWER);\n    } else {\n      setTimeout(() => {\n        isSubscribe.current && setIsDone(true);\n      }, UX.DELAY_ANSWER);\n    }\n  };\n\n  const handleReplay = () => {\n    setIsDone(false);\n    setState({\n      current: 0,\n      nRight: 0,\n      nWrong: 0,\n      // status 0 - reading question, 1 - show right result, 2 - show wrong result\n      status: 0,\n      answerList: shuffleAnswers(\n        list[0]?.word,\n        list[0]?.phonetic,\n        list[0]?.wrongList,\n      ),\n      answerIndex: -1,\n    });\n    nRightConsecutive.current = { top: 0, n: 0 };\n  };\n\n  return (\n    <div className=\"flex-center-col h-100vh container\">\n      <div className={`${classes.root} container dyno-game-box`}>\n        {/* title */}\n        <div className=\"dyno-game-title\">\n          <img src={logoGame} alt=\"game photo\" />\n          <h1>Hãy chọn từ đúng</h1>\n        </div>\n\n        {!isDone ? (\n          <>\n            {/* summary */}\n            <div className={`${classes.summary} flex-center-between`}>\n              <div className=\"flex-center--ver\">\n                Câu&nbsp;<b>{current + 1}</b>\n                &nbsp;/&nbsp;\n                <b>{nQuestion}</b>\n              </div>\n\n              <div className=\"flex-center--ver\">\n                <b>{nRight}</b>&nbsp;Đúng\n                <RightIcon className={`${classes.summaryIcon} right`} />\n                &nbsp;-&nbsp;\n                <b>{nWrong}</b>&nbsp;Sai\n                <WrongIcon className={`${classes.summaryIcon} wrong`} />\n              </div>\n            </div>\n\n            {/* body */}\n            <div\n              className={`${classes.mainContent} ${\n                status !== 0 ? 'disabled' : 'ani-fade'\n              }`}>\n              {/* question */}\n              <div className=\"flex-center-col\">\n                <p\n                  style={{ visibility: status === 0 ? 'hidden' : 'visible' }}\n                  className={`${classes.result} ${\n                    status === 1 ? 'right' : 'wrong'\n                  }`}>\n                  {status === 1 ? 'Chính xác' : 'Sai rồi'}\n                </p>\n                <span className={`${classes.question} t-center`}>{mean}</span>\n              </div>\n\n              {/* answers */}\n              <div className={classes.answers}>\n                {answerList.map((answer, index) => (\n                  <div\n                    onClick={() => onAnswer(answer.word, index)}\n                    className={`${\n                      classes.answerItem\n                    } flex-center-col p-5 ${addClassAnswerItem(\n                      status,\n                      answerIndex,\n                      index,\n                      word,\n                      answer.word,\n                    )}`}\n                    key={index}>\n                    <p className=\"mb-2 t-center\">{answer.word}</p>\n                    {answer.phonetic && (\n                      <span className=\"phonetic t-center\">\n                        /{answer.phonetic}/\n                      </span>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </>\n        ) : (\n          <CorrectWordResult\n            onReplay={handleReplay}\n            nRight={nRight}\n            nWrong={nWrong}\n            nRightConsecutive={nRightConsecutive.current.top}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nCorrectWord.propTypes = {\n  list: PropTypes.array,\n};\n\nCorrectWord.defaultProps = {\n  list: [],\n};\n\nexport default CorrectWord;\n"]},"metadata":{},"sourceType":"module"}