{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Register/index.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport SocialNetworkLogin from 'components/Login/SocialNetwork';\nimport InputCustom from 'components/UI/InputCustom';\nimport { MAX, MIN, REGEX } from 'constant';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { formStyle } from 'components/UI/style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().trim().required('Nhập email').email('Email không hợp lệ').max(MAX.EMAIL_LEN, `Email tối đa ${MAX.EMAIL_LEN}`),\n  name: yup.string().trim().required('Nhập họ tên').max(MAX.NAME_LEN, `Họ tên tối đa ${MAX.NAME_LEN} ký tự`).matches(REGEX.NAME, 'Họ tên không chứ số và ký tự đặc biệt'),\n  password: yup.string().trim().required('Nhập mật khẩu').min(MIN.PASSWORD_LEN, `Mật khẩu ít nhất ${MIN.PASSWORD_LEN} ký tự`).max(MAX.PASSWORD_LEN, `Mật khẩu tối đa ${MAX.PASSWORD_LEN}`)\n});\n\nfunction Register(_ref) {\n  _s();\n\n  var _errors$email, _errors$name, _errors$password;\n\n  let {\n    onRegister,\n    loading\n  } = _ref;\n  const classes = makeStyles(formStyle)();\n  const [visiblePw, setVisiblePw] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `${classes.root} flex-col`,\n    onSubmit: handleSubmit(onRegister),\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `${classes.title} t-center`,\n        children: \"T\\u1EA1o t\\xE0i kho\\u1EA3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"t-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n          className: classes.labelIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n        label: \"Email\",\n        size: \"small\",\n        placeholder: \"Nh\\u1EADp email\",\n        error: Boolean(errors.email),\n        inputProps: {\n          name: 'email',\n          maxLength: MAX.EMAIL_LEN,\n          autoFocus: true,\n          ...register('email')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n        label: \"H\\u1ECD t\\xEAn\",\n        size: \"small\",\n        placeholder: \"Nh\\u1EADp h\\u1ECD t\\xEAn\",\n        error: Boolean(errors.name),\n        inputProps: {\n          name: 'name',\n          maxLength: MAX.NAME_LEN,\n          ...register('name')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(InputCustom, {\n        label: \"M\\u1EADt kh\\u1EA9u\",\n        size: \"small\",\n        placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n        error: Boolean(errors.password),\n        inputProps: {\n          name: 'password',\n          maxLength: MAX.PASSWORD_LEN,\n          type: visiblePw ? 'text' : 'password',\n          ...register('password')\n        },\n        endAdornment: visiblePw ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n          className: `${classes.icon} ${classes.visiblePw}`,\n          onClick: () => setVisiblePw(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n          className: classes.icon,\n          onClick: () => setVisiblePw(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"_btn _btn-primary\",\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: loading,\n      endIcon: loading && /*#__PURE__*/_jsxDEV(LoopIcon, {\n        className: \"ani-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }, this),\n      size: \"large\",\n      children: \"\\u0110\\u0103ng k\\xFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"or-option w-100 t-center\",\n      children: \"HO\\u1EB6C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialNetworkLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"dR3pZy5+m6gbgjGHumWxsqowGjQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nRegister.propTypes = {\n  onRegister: PropTypes.func,\n  loading: PropTypes.bool\n};\nRegister.defaultProps = {\n  onRegister: function () {},\n  loading: false\n};\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Register/index.js"],"names":["yupResolver","Button","AccountCircleIcon","LoopIcon","VisibilityIcon","VisibilityOffIcon","SocialNetworkLogin","InputCustom","MAX","MIN","REGEX","PropTypes","React","useState","useForm","yup","makeStyles","formStyle","schema","object","shape","email","string","trim","required","max","EMAIL_LEN","name","NAME_LEN","matches","NAME","password","min","PASSWORD_LEN","Register","onRegister","loading","classes","visiblePw","setVisiblePw","register","handleSubmit","formState","errors","resolver","root","title","labelIcon","Boolean","maxLength","autoFocus","message","type","icon","propTypes","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport SocialNetworkLogin from 'components/Login/SocialNetwork';\nimport InputCustom from 'components/UI/InputCustom';\nimport { MAX, MIN, REGEX } from 'constant';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { formStyle } from 'components/UI/style';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .required('Nhập email')\n    .email('Email không hợp lệ')\n    .max(MAX.EMAIL_LEN, `Email tối đa ${MAX.EMAIL_LEN}`),\n  name: yup\n    .string()\n    .trim()\n    .required('Nhập họ tên')\n    .max(MAX.NAME_LEN, `Họ tên tối đa ${MAX.NAME_LEN} ký tự`)\n    .matches(REGEX.NAME, 'Họ tên không chứ số và ký tự đặc biệt'),\n  password: yup\n    .string()\n    .trim()\n    .required('Nhập mật khẩu')\n    .min(MIN.PASSWORD_LEN, `Mật khẩu ít nhất ${MIN.PASSWORD_LEN} ký tự`)\n    .max(MAX.PASSWORD_LEN, `Mật khẩu tối đa ${MAX.PASSWORD_LEN}`),\n});\n\nfunction Register({ onRegister, loading }) {\n  const classes = makeStyles(formStyle)();\n\n  const [visiblePw, setVisiblePw] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <form\n      className={`${classes.root} flex-col`}\n      onSubmit={handleSubmit(onRegister)}\n      autoComplete=\"off\">\n      <div className=\"flex-col\">\n        <h1 className={`${classes.title} t-center`}>Tạo tài khoản</h1>\n        <div className=\"t-center mt-5\">\n          <AccountCircleIcon className={classes.labelIcon} />\n        </div>\n      </div>\n\n      <div className=\"flex-col\">\n        <InputCustom\n          label=\"Email\"\n          size=\"small\"\n          placeholder=\"Nhập email\"\n          error={Boolean(errors.email)}\n          inputProps={{\n            name: 'email',\n            maxLength: MAX.EMAIL_LEN,\n            autoFocus: true,\n            ...register('email'),\n          }}\n        />\n        {errors.email && <p className=\"text-error\">{errors.email?.message}</p>}\n      </div>\n\n      <div className=\"flex-col\">\n        <InputCustom\n          label=\"Họ tên\"\n          size=\"small\"\n          placeholder=\"Nhập họ tên\"\n          error={Boolean(errors.name)}\n          inputProps={{\n            name: 'name',\n            maxLength: MAX.NAME_LEN,\n            ...register('name'),\n          }}\n        />\n        {errors.name && <p className=\"text-error\">{errors.name?.message}</p>}\n      </div>\n\n      <div className=\"flex-col\">\n        <InputCustom\n          label=\"Mật khẩu\"\n          size=\"small\"\n          placeholder=\"Nhập mật khẩu\"\n          error={Boolean(errors.password)}\n          inputProps={{\n            name: 'password',\n            maxLength: MAX.PASSWORD_LEN,\n            type: visiblePw ? 'text' : 'password',\n            ...register('password'),\n          }}\n          endAdornment={\n            visiblePw ? (\n              <VisibilityIcon\n                className={`${classes.icon} ${classes.visiblePw}`}\n                onClick={() => setVisiblePw(false)}\n              />\n            ) : (\n              <VisibilityOffIcon\n                className={classes.icon}\n                onClick={() => setVisiblePw(true)}\n              />\n            )\n          }\n        />\n        {errors.password && (\n          <p className=\"text-error\">{errors.password?.message}</p>\n        )}\n      </div>\n\n      <Button\n        className=\"_btn _btn-primary\"\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={loading}\n        endIcon={loading && <LoopIcon className=\"ani-spin\" />}\n        size=\"large\">\n        Đăng ký\n      </Button>\n\n      <div className=\"or-option w-100 t-center\">HOẶC</div>\n      <SocialNetworkLogin />\n    </form>\n  );\n}\n\nRegister.propTypes = {\n  onRegister: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nRegister.defaultProps = {\n  onRegister: function () {},\n  loading: false,\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}