{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Flashcard/GalleryItem/index.js\",\n    _s = $RefreshSig$();\n\nimport { onTextToSpeech } from 'helper/speaker.helper';\nimport useSpeaker from 'hooks/useSpeaker';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GalleryItem(_ref) {\n  _s();\n\n  let {\n    word,\n    mean,\n    phonetic,\n    type,\n    picture,\n    showMean\n  } = _ref;\n  const classes = useStyle({\n    picture\n  });\n  const {\n    voice,\n    speed,\n    volume\n  } = useSpeaker();\n\n  const handleSpeakWord = () => {\n    if (word && word !== '') {\n      onTextToSpeech(word, voice, speed, volume);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} flex-center cur-pointer position-rel`,\n    onClick: handleSpeakWord,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [showMean && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.mean,\n        children: mean\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.word,\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.phonetic,\n        children: [\"/\", phonetic, \"/ (\", type, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GalleryItem, \"7E0JdIXH15scP+LrCeYTuMkjZC8=\", false, function () {\n  return [useStyle, useSpeaker];\n});\n\n_c = GalleryItem;\nGalleryItem.propTypes = {\n  mean: PropTypes.string,\n  phonetic: PropTypes.string,\n  picture: PropTypes.string,\n  showMean: PropTypes.bool,\n  type: PropTypes.string,\n  word: PropTypes.string\n};\nGalleryItem.defaultProps = {\n  mean: 'Mean',\n  phonetic: 'phonetic',\n  word: 'word',\n  type: 'n',\n  picture: ''\n};\nexport default GalleryItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GalleryItem\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Flashcard/GalleryItem/index.js"],"names":["onTextToSpeech","useSpeaker","PropTypes","React","useStyle","GalleryItem","word","mean","phonetic","type","picture","showMean","classes","voice","speed","volume","handleSpeakWord","root","content","propTypes","string","bool","defaultProps"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,SAArB;;;AAEA,SAASC,WAAT,OAAwE;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA;AAAvC,GAAmD;AACtE,QAAMC,OAAO,GAAGR,QAAQ,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAAxB;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA2Bd,UAAU,EAA3C;;AAEA,QAAMe,eAAe,GAAG,MAAM;AAC5B,QAAIV,IAAI,IAAIA,IAAI,KAAK,EAArB,EAAyB;AACvBN,MAAAA,cAAc,CAACM,IAAD,EAAOO,KAAP,EAAcC,KAAd,EAAqBC,MAArB,CAAd;AACD;AACF,GAJD;;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEH,OAAO,CAACK,IAAK,uCAD7B;AAEE,IAAA,OAAO,EAAED,eAFX;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACM,OAAxB;AAAA,iBACGP,QAAQ,iBAAI;AAAI,QAAA,SAAS,EAAEC,OAAO,CAACL,IAAvB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cADf,eAEE;AAAI,QAAA,SAAS,EAAEK,OAAO,CAACN,IAAvB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAEM,OAAO,CAACJ,QAAtB;AAAA,wBACIA,QADJ,SACiBC,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAxBQJ,W;UACSD,Q,EACiBH,U;;;KAF1BI,W;AA0BTA,WAAW,CAACc,SAAZ,GAAwB;AACtBZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MADM;AAEtBZ,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,MAFE;AAGtBV,EAAAA,OAAO,EAAER,SAAS,CAACkB,MAHG;AAItBT,EAAAA,QAAQ,EAAET,SAAS,CAACmB,IAJE;AAKtBZ,EAAAA,IAAI,EAAEP,SAAS,CAACkB,MALM;AAMtBd,EAAAA,IAAI,EAAEJ,SAAS,CAACkB;AANM,CAAxB;AASAf,WAAW,CAACiB,YAAZ,GAA2B;AACzBf,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,QAAQ,EAAE,UAFe;AAGzBF,EAAAA,IAAI,EAAE,MAHmB;AAIzBG,EAAAA,IAAI,EAAE,GAJmB;AAKzBC,EAAAA,OAAO,EAAE;AALgB,CAA3B;AAQA,eAAeL,WAAf","sourcesContent":["import { onTextToSpeech } from 'helper/speaker.helper';\nimport useSpeaker from 'hooks/useSpeaker';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\n\nfunction GalleryItem({ word, mean, phonetic, type, picture, showMean }) {\n  const classes = useStyle({ picture });\n  const { voice, speed, volume } = useSpeaker();\n\n  const handleSpeakWord = () => {\n    if (word && word !== '') {\n      onTextToSpeech(word, voice, speed, volume);\n    }\n  };\n\n  return (\n    <div\n      className={`${classes.root} flex-center cur-pointer position-rel`}\n      onClick={handleSpeakWord}>\n      <div className=\"bg\" />\n      <div className={classes.content}>\n        {showMean && <h2 className={classes.mean}>{mean}</h2>}\n        <h2 className={classes.word}>{word}</h2>\n        <p className={classes.phonetic}>\n          /{phonetic}/ ({type})\n        </p>\n      </div>\n    </div>\n  );\n}\n\nGalleryItem.propTypes = {\n  mean: PropTypes.string,\n  phonetic: PropTypes.string,\n  picture: PropTypes.string,\n  showMean: PropTypes.bool,\n  type: PropTypes.string,\n  word: PropTypes.string,\n};\n\nGalleryItem.defaultProps = {\n  mean: 'Mean',\n  phonetic: 'phonetic',\n  word: 'word',\n  type: 'n',\n  picture: '',\n};\n\nexport default GalleryItem;\n"]},"metadata":{},"sourceType":"module"}