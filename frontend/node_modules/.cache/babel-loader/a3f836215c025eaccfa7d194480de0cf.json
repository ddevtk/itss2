{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/UI/Tag/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tag(_ref) {\n  _s();\n\n  let {\n    title,\n    iconSrc,\n    id,\n    onChange,\n    resetFlag\n  } = _ref;\n  const classes = useStyle();\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => {\n    onChange(id, !isActive);\n    setIsActive(!isActive);\n  };\n\n  useEffect(() => {\n    if (!resetFlag) return; // reset value if parent component reset, except first render\n\n    setIsActive(false);\n  }, [resetFlag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} flex-center--ver cur-pointer ${isActive ? 'active' : ''}`,\n    onClick: onClick,\n    children: [iconSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classes.icon,\n      src: iconSrc,\n      alt: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.text,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"MBnvcydhgN2aiuQPFWvc3L+4KQg=\", false, function () {\n  return [useStyle];\n});\n\n_c = Tag;\nTag.propTypes = {\n  id: PropTypes.string,\n  iconSrc: PropTypes.any,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number\n};\nTag.defaultProps = {\n  id: '',\n  iconSrc: null,\n  title: 'Title',\n  onChange: function () {},\n  resetFlag: 0\n};\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/UI/Tag/index.js"],"names":["PropTypes","React","useEffect","useState","useStyle","Tag","title","iconSrc","id","onChange","resetFlag","classes","isActive","setIsActive","onClick","root","icon","text","propTypes","string","any","func","number","defaultProps"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,SAArB;;;AAEA,SAASC,GAAT,OAA0D;AAAA;;AAAA,MAA7C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,GAA6C;AACxD,QAAMC,OAAO,GAAGP,QAAQ,EAAxB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,OAAO,GAAG,MAAM;AACpBL,IAAAA,QAAQ,CAACD,EAAD,EAAK,CAACI,QAAN,CAAR;AACAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,SAAL,EAAgB,OADF,CAEd;;AACAG,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJQ,EAIN,CAACH,SAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,GAAEC,OAAO,CAACI,IAAK,iCACzBH,QAAQ,GAAG,QAAH,GAAc,EACvB,EAHH;AAIE,IAAA,OAAO,EAAEE,OAJX;AAAA,eAKGP,OAAO,iBAAI;AAAK,MAAA,SAAS,EAAEI,OAAO,CAACK,IAAxB;AAA8B,MAAA,GAAG,EAAET,OAAnC;AAA4C,MAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YALd,eAME;AAAM,MAAA,SAAS,EAAEI,OAAO,CAACM,IAAzB;AAAA,gBAAgCX;AAAhC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBQD,G;UACSD,Q;;;KADTC,G;AA2BTA,GAAG,CAACa,SAAJ,GAAgB;AACdV,EAAAA,EAAE,EAAER,SAAS,CAACmB,MADA;AAEdZ,EAAAA,OAAO,EAAEP,SAAS,CAACoB,GAFL;AAGdd,EAAAA,KAAK,EAAEN,SAAS,CAACmB,MAHH;AAIdV,EAAAA,QAAQ,EAAET,SAAS,CAACqB,IAJN;AAKdX,EAAAA,SAAS,EAAEV,SAAS,CAACsB;AALP,CAAhB;AAQAjB,GAAG,CAACkB,YAAJ,GAAmB;AACjBf,EAAAA,EAAE,EAAE,EADa;AAEjBD,EAAAA,OAAO,EAAE,IAFQ;AAGjBD,EAAAA,KAAK,EAAE,OAHU;AAIjBG,EAAAA,QAAQ,EAAE,YAAY,CAAE,CAJP;AAKjBC,EAAAA,SAAS,EAAE;AALM,CAAnB;AAQA,eAAeL,GAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useStyle from './style';\n\nfunction Tag({ title, iconSrc, id, onChange, resetFlag }) {\n  const classes = useStyle();\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => {\n    onChange(id, !isActive);\n    setIsActive(!isActive);\n  };\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setIsActive(false);\n  }, [resetFlag]);\n\n  return (\n    <div\n      className={`${classes.root} flex-center--ver cur-pointer ${\n        isActive ? 'active' : ''\n      }`}\n      onClick={onClick}>\n      {iconSrc && <img className={classes.icon} src={iconSrc} alt=\"icon\" />}\n      <span className={classes.text}>{title}</span>\n    </div>\n  );\n}\n\nTag.propTypes = {\n  id: PropTypes.string,\n  iconSrc: PropTypes.any,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number,\n};\n\nTag.defaultProps = {\n  id: '',\n  iconSrc: null,\n  title: 'Title',\n  onChange: function () {},\n  resetFlag: 0,\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}