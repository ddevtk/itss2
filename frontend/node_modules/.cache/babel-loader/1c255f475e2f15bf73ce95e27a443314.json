{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/UI/UploadButton/index.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Compressor from 'compressorjs';\nimport { MAX } from 'constant';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction checkFile(file) {\n  if (!file) return {\n    status: false,\n    message: 'File không hợp lệ'\n  };\n  const {\n    type,\n    size\n  } = file;\n  if (type.split('/')[0] !== 'image') return {\n    status: false,\n    message: 'File gửi lên phải là một ảnh'\n  };\n  if (size / 1024 ** 2 > MAX.IMG_SIZE) return {\n    status: false,\n    message: `Kích thước của ảnh tối đa là ${MAX.IMG_SIZE} MB`\n  };\n  return {\n    status: true\n  };\n}\n\nfunction UploadButton(_ref) {\n  _s();\n\n  var _state$data, _state$data2, _state$data3;\n\n  let {\n    title,\n    className,\n    onChange,\n    resetFlag\n  } = _ref;\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    status: 0,\n    data: null\n  });\n  useEffect(() => {\n    if (!resetFlag) return; // reset value if parent component reset, except first render\n\n    setState({\n      status: 0,\n      data: null\n    });\n  }, [resetFlag]);\n\n  const loadFileError = () => {\n    onChange(null);\n    setState({\n      status: 0\n    });\n    dispatch(setMessage({\n      type: 'error',\n      message: 'Tải tập tin thất bại, thử lại'\n    }));\n  };\n\n  const onFileChange = file => {\n    const {\n      status,\n      message = ''\n    } = checkFile(file);\n\n    if (!status) {\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n      onChange(null);\n      return;\n    }\n\n    setState({\n      status: 1\n    }); // loading\n\n    const size = file.size / 1024 ** 2; // compress image\n\n    new Compressor(file, {\n      quality: size > 1 ? 0.6 : 0.8,\n\n      success(fileResult) {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(fileResult);\n        fileReader.onerror = loadFileError;\n\n        fileReader.onload = function (e) {\n          const imgSrcBase64 = e.target.result;\n          onChange(imgSrcBase64);\n          setState({\n            status: 2,\n            data: {\n              imgSrc: imgSrcBase64,\n              fileName: fileResult.name,\n              fileSize: (fileResult.size / 1024 ** 2).toFixed(2)\n            }\n          });\n        };\n      },\n\n      error() {\n        loadFileError();\n      }\n\n    });\n  };\n\n  const onRemoveFile = () => {\n    onChange(null);\n    setState({\n      status: 0,\n      data: null\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [state.status === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        accept: \"image/*\",\n        id: \"button-file\",\n        htmlFor: \"contained-button-file\",\n        type: \"file\",\n        onChange: e => onFileChange(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.btn} w-100 h-100`,\n          variant: \"contained\",\n          color: \"primary\",\n          component: \"span\",\n          endIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 24\n          }, this),\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), state.status === 1 && /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"rect\",\n      classes: {\n        root: classes.skeleton\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), state.status === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.review} w-100 h-100 flex-center-between`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.imgSrc,\n        alt: \"photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [`${(_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.fileName} (${(_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : _state$data3.fileSize} MB)`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        className: \"icon cur-pointer\",\n        onClick: onRemoveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadButton, \"c9+fqLHx5w3xzD5LnMuaWgUzUF8=\", false, function () {\n  return [useStyle, useDispatch];\n});\n\n_c = UploadButton;\nUploadButton.propTypes = {\n  title: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number\n};\nUploadButton.defaultProps = {\n  title: 'Upload',\n  className: '',\n  onChange: () => {},\n  resetFlag: 0\n};\nexport default UploadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/UI/UploadButton/index.js"],"names":["Button","CloudUploadIcon","DeleteIcon","Skeleton","Compressor","MAX","PropTypes","React","useEffect","useState","useDispatch","setMessage","useStyle","checkFile","file","status","message","type","size","split","IMG_SIZE","UploadButton","title","className","onChange","resetFlag","classes","dispatch","state","setState","data","loadFileError","onFileChange","quality","success","fileResult","fileReader","FileReader","readAsDataURL","onerror","onload","e","imgSrcBase64","target","result","imgSrc","fileName","name","fileSize","toFixed","error","onRemoveFile","input","files","btn","root","skeleton","review","propTypes","string","func","number","defaultProps"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Compressor from 'compressorjs';\nimport { MAX } from 'constant';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport useStyle from './style';\n\nfunction checkFile(file) {\n  if (!file) return { status: false, message: 'File không hợp lệ' };\n  const { type, size } = file;\n\n  if (type.split('/')[0] !== 'image')\n    return { status: false, message: 'File gửi lên phải là một ảnh' };\n\n  if (size / 1024 ** 2 > MAX.IMG_SIZE)\n    return {\n      status: false,\n      message: `Kích thước của ảnh tối đa là ${MAX.IMG_SIZE} MB`,\n    };\n\n  return { status: true };\n}\n\nfunction UploadButton({ title, className, onChange, resetFlag }) {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ status: 0, data: null });\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setState({ status: 0, data: null });\n  }, [resetFlag]);\n\n  const loadFileError = () => {\n    onChange(null);\n    setState({ status: 0 });\n    dispatch(\n      setMessage({\n        type: 'error',\n        message: 'Tải tập tin thất bại, thử lại',\n      }),\n    );\n  };\n\n  const onFileChange = (file) => {\n    const { status, message = '' } = checkFile(file);\n    if (!status) {\n      dispatch(setMessage({ type: 'error', message }));\n      onChange(null);\n      return;\n    }\n\n    setState({ status: 1 }); // loading\n    const size = file.size / 1024 ** 2;\n\n    // compress image\n    new Compressor(file, {\n      quality: size > 1 ? 0.6 : 0.8,\n\n      success(fileResult) {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(fileResult);\n\n        fileReader.onerror = loadFileError;\n\n        fileReader.onload = function (e) {\n          const imgSrcBase64 = e.target.result;\n          onChange(imgSrcBase64);\n          setState({\n            status: 2,\n            data: {\n              imgSrc: imgSrcBase64,\n              fileName: fileResult.name,\n              fileSize: (fileResult.size / 1024 ** 2).toFixed(2),\n            },\n          });\n        };\n      },\n\n      error() {\n        loadFileError();\n      },\n    });\n  };\n\n  const onRemoveFile = () => {\n    onChange(null);\n    setState({ status: 0, data: null });\n  };\n\n  return (\n    <div className={className}>\n      {/* waiting */}\n      {state.status === 0 && (\n        <>\n          <input\n            className={classes.input}\n            accept=\"image/*\"\n            id=\"button-file\"\n            htmlFor=\"contained-button-file\"\n            type=\"file\"\n            onChange={(e) => onFileChange(e.target.files[0])}\n          />\n          <label htmlFor=\"button-file\">\n            <Button\n              className={`${classes.btn} w-100 h-100`}\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              endIcon={<CloudUploadIcon />}>\n              {title}\n            </Button>\n          </label>\n        </>\n      )}\n\n      {/* loading */}\n      {state.status === 1 && (\n        <Skeleton variant=\"rect\" classes={{ root: classes.skeleton }} />\n      )}\n\n      {/* done */}\n      {state.status === 2 && (\n        <div className={`${classes.review} w-100 h-100 flex-center-between`}>\n          <img src={state.data?.imgSrc} alt=\"photo\" />\n          <p>{`${state.data?.fileName} (${state.data?.fileSize} MB)`} </p>\n          <DeleteIcon className=\"icon cur-pointer\" onClick={onRemoveFile} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nUploadButton.propTypes = {\n  title: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number,\n};\n\nUploadButton.defaultProps = {\n  title: 'Upload',\n  className: '',\n  onChange: () => {},\n  resetFlag: 0,\n};\n\nexport default UploadButton;\n"]},"metadata":{},"sourceType":"module"}