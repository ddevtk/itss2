{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/CommunicationPhrase/SentenceTopicModal/index.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tag from 'components/UI/Tag';\nimport { SENTENCE_TOPICS } from 'constant/sentence-topics';\nimport { addOrDelItemInArray } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SentenceTopicModal(_ref) {\n  _s();\n\n  let {\n    onClose,\n    onSelect,\n    open\n  } = _ref;\n  const classes = useStyle();\n  const topicRef = useRef([]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    classes: {\n      paper: classes.dialogPaper\n    },\n    open: open,\n    keepMounted: true,\n    maxWidth: \"md\",\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.title,\n      children: \"Ch\\u1ECDn ch\\u1EE7 \\u0111\\u1EC1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      classes: {\n        dividers: classes.breakLine\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"d-flex flex-wrap\",\n        children: SENTENCE_TOPICS.map((topic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-2\",\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            title: topic.title,\n            id: topic.key,\n            onChange: idTopic => addOrDelItemInArray(topicRef.current, idTopic)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        className: \"_btn _btn-stand\",\n        children: \"\\u0110\\xF3ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onSelect(topicRef.current),\n        className: \"_btn _btn-primary\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SentenceTopicModal, \"lfdm59inAyZL+kYtoGEanei/PKI=\", false, function () {\n  return [useStyle];\n});\n\n_c = SentenceTopicModal;\nSentenceTopicModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSelect: PropTypes.func\n};\nSentenceTopicModal.defaultProps = {\n  open: false,\n  onClose: function () {},\n  onSelect: function () {}\n};\nexport default SentenceTopicModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentenceTopicModal\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/CommunicationPhrase/SentenceTopicModal/index.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","Tag","SENTENCE_TOPICS","addOrDelItemInArray","PropTypes","React","useRef","useStyle","SentenceTopicModal","onClose","onSelect","open","classes","topicRef","paper","dialogPaper","title","dividers","breakLine","map","topic","index","key","idTopic","current","propTypes","bool","func","defaultProps"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,mBAAT,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;;;AAEA,SAASC,kBAAT,OAAyD;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAA6B;AACvD,QAAMC,OAAO,GAAGL,QAAQ,EAAxB;AACA,QAAMM,QAAQ,GAAGP,MAAM,CAAC,EAAD,CAAvB;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,KAAK,EAAEF,OAAO,CAACG;AAAjB,KADX;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,QAAQ,EAAC,IAJX;AAKE,IAAA,OAAO,EAAEF,OALX;AAAA,4BAME,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEG,OAAO,CAACI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAQE,QAAC,aAAD;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAEL,OAAO,CAACM;AAApB,OAAjC;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBACGhB,eAAe,CAACiB,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,kBACnB;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,GAAD;AACE,YAAA,KAAK,EAAED,KAAK,CAACJ,KADf;AAEE,YAAA,EAAE,EAAEI,KAAK,CAACE,GAFZ;AAGE,YAAA,QAAQ,EAAGC,OAAD,IACRpB,mBAAmB,CAACU,QAAQ,CAACW,OAAV,EAAmBD,OAAnB;AAJvB;AAAA;AAAA;AAAA;AAAA;AADF,WAA0BF,KAA1B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAwBE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEZ,OAAjB;AAA0B,QAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACG,QAAQ,CAACW,OAAV,CADzB;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCQhB,kB;UACSD,Q;;;KADTC,kB;AA2CTA,kBAAkB,CAACiB,SAAnB,GAA+B;AAC7Bd,EAAAA,IAAI,EAAEP,SAAS,CAACsB,IADa;AAE7BjB,EAAAA,OAAO,EAAEL,SAAS,CAACuB,IAFU;AAG7BjB,EAAAA,QAAQ,EAAEN,SAAS,CAACuB;AAHS,CAA/B;AAMAnB,kBAAkB,CAACoB,YAAnB,GAAkC;AAChCjB,EAAAA,IAAI,EAAE,KAD0B;AAEhCF,EAAAA,OAAO,EAAE,YAAY,CAAE,CAFS;AAGhCC,EAAAA,QAAQ,EAAE,YAAY,CAAE;AAHQ,CAAlC;AAMA,eAAeF,kBAAf","sourcesContent":["import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tag from 'components/UI/Tag';\nimport { SENTENCE_TOPICS } from 'constant/sentence-topics';\nimport { addOrDelItemInArray } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport useStyle from './style';\n\nfunction SentenceTopicModal({ onClose, onSelect, open }) {\n  const classes = useStyle();\n  const topicRef = useRef([]);\n\n  return (\n    <Dialog\n      classes={{ paper: classes.dialogPaper }}\n      open={open}\n      keepMounted\n      maxWidth=\"md\"\n      onClose={onClose}>\n      <DialogTitle className={classes.title}>Chọn chủ đề</DialogTitle>\n\n      <DialogContent dividers classes={{ dividers: classes.breakLine }}>\n        <ul className=\"d-flex flex-wrap\">\n          {SENTENCE_TOPICS.map((topic, index) => (\n            <div className=\"m-2\" key={index}>\n              <Tag\n                title={topic.title}\n                id={topic.key}\n                onChange={(idTopic) =>\n                  addOrDelItemInArray(topicRef.current, idTopic)\n                }\n              />\n            </div>\n          ))}\n        </ul>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} className=\"_btn _btn-stand\">\n          Đóng\n        </Button>\n        <Button\n          onClick={() => onSelect(topicRef.current)}\n          className=\"_btn _btn-primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSentenceTopicModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSelect: PropTypes.func,\n};\n\nSentenceTopicModal.defaultProps = {\n  open: false,\n  onClose: function () {},\n  onSelect: function () {},\n};\n\nexport default SentenceTopicModal;\n"]},"metadata":{},"sourceType":"module"}