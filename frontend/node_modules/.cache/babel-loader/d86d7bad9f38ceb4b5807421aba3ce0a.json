{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Flashcard/SlideShow/index.js\",\n    _s = $RefreshSig$();\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport SlideItem from '../SlideItem';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst perPage = 7;\n\nfunction SlideShow(_ref) {\n  _s();\n\n  var _list$current;\n\n  let {\n    list,\n    total,\n    onGetNewList,\n    onGetOldList,\n    showMean,\n    currentSlide,\n    onSaveCurrentSlide,\n    totalCurrentSlide\n  } = _ref;\n  const classes = useStyle();\n  const [current, setCurrent] = useState(currentSlide);\n  const count = totalCurrentSlide + current;\n\n  const onPrev = () => {\n    if (current !== 0) {\n      onSaveCurrentSlide(current - 1);\n      setCurrent(current - 1);\n    } else {\n      onSaveCurrentSlide(perPage - 1);\n      setCurrent(perPage - 1);\n      onGetOldList();\n    }\n  };\n\n  const onNext = () => {\n    if (current < list.length - 1) {\n      onSaveCurrentSlide(current + 1);\n      setCurrent(current + 1);\n    } else {\n      onGetNewList();\n      onSaveCurrentSlide(0);\n      setCurrent(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.wrapper} flex-center--ver position-rel`,\n    children: list && list.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SlideItem, { ...list[current],\n        example: (_list$current = list[current]) === null || _list$current === void 0 ? void 0 : _list$current.examples[0],\n        showMean: showMean\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), count > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"L\\xF9i trang c\\u0169\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-arrow prev\",\n          onClick: onPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), count + 1 < total && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Trang k\\u1EBF ti\\u1EBFp\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-arrow next\",\n          onClick: onNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"rect\",\n      className: `${classes.skeleton} w-100`,\n      animation: \"wave\",\n      style: {\n        height: '576px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SlideShow, \"hpP0cJFmAj+oVSIk01hVEfeqK7E=\", false, function () {\n  return [useStyle];\n});\n\n_c = SlideShow;\nSlideShow.propTypes = {\n  list: PropTypes.array,\n  onGetNewList: PropTypes.func,\n  onGetOldList: PropTypes.func,\n  onSaveCurrentSlide: PropTypes.func,\n  showMean: PropTypes.bool,\n  total: PropTypes.number,\n  currentSlide: PropTypes.number,\n  totalCurrentSlide: PropTypes.number\n};\nSlideShow.defaultProps = {\n  list: [],\n  total: 0,\n  currentSlide: 0\n};\nexport default SlideShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideShow\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Flashcard/SlideShow/index.js"],"names":["Tooltip","Skeleton","PropTypes","React","useState","SlideItem","useStyle","perPage","SlideShow","list","total","onGetNewList","onGetOldList","showMean","currentSlide","onSaveCurrentSlide","totalCurrentSlide","classes","current","setCurrent","count","onPrev","onNext","length","wrapper","examples","skeleton","height","propTypes","array","func","bool","number","defaultProps"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,SAArB;;;AACA,MAAMC,OAAO,GAAG,CAAhB;;AAEA,SAASC,SAAT,OASG;AAAA;;AAAA;;AAAA,MATgB;AACjBC,IAAAA,IADiB;AAEjBC,IAAAA,KAFiB;AAGjBC,IAAAA,YAHiB;AAIjBC,IAAAA,YAJiB;AAKjBC,IAAAA,QALiB;AAMjBC,IAAAA,YANiB;AAOjBC,IAAAA,kBAPiB;AAQjBC,IAAAA;AARiB,GAShB;AACD,QAAMC,OAAO,GAAGX,QAAQ,EAAxB;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACU,YAAD,CAAtC;AACA,QAAMM,KAAK,GAAGJ,iBAAiB,GAAGE,OAAlC;;AAEA,QAAMG,MAAM,GAAG,MAAM;AACnB,QAAIH,OAAO,KAAK,CAAhB,EAAmB;AACjBH,MAAAA,kBAAkB,CAACG,OAAO,GAAG,CAAX,CAAlB;AACAC,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAHD,MAGO;AACLH,MAAAA,kBAAkB,CAACR,OAAO,GAAG,CAAX,CAAlB;AACAY,MAAAA,UAAU,CAACZ,OAAO,GAAG,CAAX,CAAV;AACAK,MAAAA,YAAY;AACb;AACF,GATD;;AAWA,QAAMU,MAAM,GAAG,MAAM;AACnB,QAAIJ,OAAO,GAAGT,IAAI,CAACc,MAAL,GAAc,CAA5B,EAA+B;AAC7BR,MAAAA,kBAAkB,CAACG,OAAO,GAAG,CAAX,CAAlB;AACAC,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAHD,MAGO;AACLP,MAAAA,YAAY;AACZI,MAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAI,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEF,OAAO,CAACO,OAAQ,gCAAnC;AAAA,cACGf,IAAI,IAAIA,IAAI,CAACc,MAAL,GAAc,CAAtB,gBACC;AAAA,8BACE,QAAC,SAAD,OACMd,IAAI,CAACS,OAAD,CADV;AAEE,QAAA,OAAO,mBAAET,IAAI,CAACS,OAAD,CAAN,kDAAE,cAAeO,QAAf,CAAwB,CAAxB,CAFX;AAGE,QAAA,QAAQ,EAAEZ;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,EAQGO,KAAK,GAAG,CAAR,iBACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,sBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAiC,UAAA,OAAO,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ,EAaGD,KAAK,GAAG,CAAR,GAAYV,KAAZ,iBACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,yBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAiC,UAAA,OAAO,EAAEY;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,oBADD,gBAqBC,QAAC,QAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,SAAS,EAAG,GAAEL,OAAO,CAACS,QAAS,QAFjC;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAJT;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GApEQnB,S;UAUSF,Q;;;KAVTE,S;AAsETA,SAAS,CAACoB,SAAV,GAAsB;AACpBnB,EAAAA,IAAI,EAAEP,SAAS,CAAC2B,KADI;AAEpBlB,EAAAA,YAAY,EAAET,SAAS,CAAC4B,IAFJ;AAGpBlB,EAAAA,YAAY,EAAEV,SAAS,CAAC4B,IAHJ;AAIpBf,EAAAA,kBAAkB,EAAEb,SAAS,CAAC4B,IAJV;AAKpBjB,EAAAA,QAAQ,EAAEX,SAAS,CAAC6B,IALA;AAMpBrB,EAAAA,KAAK,EAAER,SAAS,CAAC8B,MANG;AAOpBlB,EAAAA,YAAY,EAAEZ,SAAS,CAAC8B,MAPJ;AAQpBhB,EAAAA,iBAAiB,EAAEd,SAAS,CAAC8B;AART,CAAtB;AAWAxB,SAAS,CAACyB,YAAV,GAAyB;AACvBxB,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,KAAK,EAAE,CAFgB;AAGvBI,EAAAA,YAAY,EAAE;AAHS,CAAzB;AAMA,eAAeN,SAAf","sourcesContent":["import Tooltip from '@material-ui/core/Tooltip';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport SlideItem from '../SlideItem';\nimport useStyle from './style';\nconst perPage = 7;\n\nfunction SlideShow({\n  list,\n  total,\n  onGetNewList,\n  onGetOldList,\n  showMean,\n  currentSlide,\n  onSaveCurrentSlide,\n  totalCurrentSlide,\n}) {\n  const classes = useStyle();\n  const [current, setCurrent] = useState(currentSlide);\n  const count = totalCurrentSlide + current;\n\n  const onPrev = () => {\n    if (current !== 0) {\n      onSaveCurrentSlide(current - 1);\n      setCurrent(current - 1);\n    } else {\n      onSaveCurrentSlide(perPage - 1);\n      setCurrent(perPage - 1);\n      onGetOldList();\n    }\n  };\n\n  const onNext = () => {\n    if (current < list.length - 1) {\n      onSaveCurrentSlide(current + 1);\n      setCurrent(current + 1);\n    } else {\n      onGetNewList();\n      onSaveCurrentSlide(0);\n      setCurrent(0);\n    }\n  };\n\n  return (\n    <div className={`${classes.wrapper} flex-center--ver position-rel`}>\n      {list && list.length > 0 ? (\n        <>\n          <SlideItem\n            {...list[current]}\n            example={list[current]?.examples[0]}\n            showMean={showMean}\n          />\n\n          {/* navigation arrow */}\n          {count > 0 && (\n            <Tooltip title=\"Lùi trang cũ\">\n              <span className=\"nav-arrow prev\" onClick={onPrev} />\n            </Tooltip>\n          )}\n          {count + 1 < total && (\n            <Tooltip title=\"Trang kế tiếp\">\n              <span className=\"nav-arrow next\" onClick={onNext} />\n            </Tooltip>\n          )}\n        </>\n      ) : (\n        <Skeleton\n          variant=\"rect\"\n          className={`${classes.skeleton} w-100`}\n          animation=\"wave\"\n          style={{ height: '576px' }}\n        />\n      )}\n    </div>\n  );\n}\n\nSlideShow.propTypes = {\n  list: PropTypes.array,\n  onGetNewList: PropTypes.func,\n  onGetOldList: PropTypes.func,\n  onSaveCurrentSlide: PropTypes.func,\n  showMean: PropTypes.bool,\n  total: PropTypes.number,\n  currentSlide: PropTypes.number,\n  totalCurrentSlide: PropTypes.number,\n};\n\nSlideShow.defaultProps = {\n  list: [],\n  total: 0,\n  currentSlide: 0,\n};\n\nexport default SlideShow;\n"]},"metadata":{},"sourceType":"module"}