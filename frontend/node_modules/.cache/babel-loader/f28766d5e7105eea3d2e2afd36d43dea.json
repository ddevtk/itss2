{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Login/data.js\",\n    _s = $RefreshSig$();\n\nimport accountApi from 'apis/accountApi';\nimport { UX } from 'constant';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport Login from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginData() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogin = async account => {\n    try {\n      setLoading(true);\n      const {\n        email,\n        password\n      } = account;\n      const apiRes = await accountApi.postLogin(email.toLowerCase(), password);\n\n      if (apiRes && apiRes.status === 200) {\n        dispatch(setMessage({\n          message: 'Đăng nhập thành công',\n          type: 'success'\n        }));\n        setTimeout(() => {\n          window.location.href = '/';\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Thất bại, thử lại !';\n      dispatch(setMessage({\n        message,\n        type: 'error'\n      }));\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: handleLogin,\n    loading: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LoginData, \"sKyeo5OvQCyvMwDC72axs3+148I=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginData;\nexport default LoginData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginData\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-japanese/frontend/src/components/Login/data.js"],"names":["accountApi","UX","React","useState","useDispatch","setMessage","Login","LoginData","loading","setLoading","dispatch","handleLogin","account","email","password","apiRes","postLogin","toLowerCase","status","message","type","setTimeout","window","location","href","DELAY_TIME","error","response","data"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,SAASC,EAAT,QAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,WAAW,GAAG,MAAOC,OAAP,IAAmB;AACrC,QAAI;AACFH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBF,OAA5B;AAEA,YAAMG,MAAM,GAAG,MAAMf,UAAU,CAACgB,SAAX,CAAqBH,KAAK,CAACI,WAAN,EAArB,EAA0CH,QAA1C,CAArB;;AACA,UAAIC,MAAM,IAAIA,MAAM,CAACG,MAAP,KAAkB,GAAhC,EAAqC;AACnCR,QAAAA,QAAQ,CACNL,UAAU,CAAC;AAAEc,UAAAA,OAAO,EAAE,sBAAX;AAAmCC,UAAAA,IAAI,EAAE;AAAzC,SAAD,CADJ,CAAR;AAIAC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,SAFS,EAEPvB,EAAE,CAACwB,UAFI,CAAV;AAGD;AACF,KAdD,CAcE,OAAOC,KAAP,EAAc;AAAA;;AACd,YAAMP,OAAO,GAAG,oBAAAO,KAAK,CAACC,QAAN,4FAAgBC,IAAhB,8EAAsBT,OAAtB,KAAiC,qBAAjD;AACAT,MAAAA,QAAQ,CAACL,UAAU,CAAC;AAAEc,QAAAA,OAAF;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAAD,CAAX,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GApBD;;AAsBA,sBAAO,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,WAAhB;AAA6B,IAAA,OAAO,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA3BQD,S;UAEUH,W;;;KAFVG,S;AA6BT,eAAeA,SAAf","sourcesContent":["import accountApi from 'apis/accountApi';\nimport { UX } from 'constant';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport Login from './index';\n\nfunction LoginData() {\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogin = async (account) => {\n    try {\n      setLoading(true);\n      const { email, password } = account;\n\n      const apiRes = await accountApi.postLogin(email.toLowerCase(), password);\n      if (apiRes && apiRes.status === 200) {\n        dispatch(\n          setMessage({ message: 'Đăng nhập thành công', type: 'success' }),\n        );\n\n        setTimeout(() => {\n          window.location.href = '/';\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Thất bại, thử lại !';\n      dispatch(setMessage({ message, type: 'error' }));\n      setLoading(false);\n    }\n  };\n\n  return <Login onLogin={handleLogin} loading={loading} />;\n}\n\nexport default LoginData;\n"]},"metadata":{},"sourceType":"module"}