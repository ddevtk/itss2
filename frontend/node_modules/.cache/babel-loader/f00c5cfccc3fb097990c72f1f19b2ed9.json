{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/Grammar/index.js\",\n    _s = $RefreshSig$();\n\nimport AutoSearchInput from 'components/UI/AutoSearchInput';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport GrammarListBoxData from './ListBox/data';\nimport useStyle from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grammar(_ref) {\n  _s();\n\n  let {\n    list,\n    loading\n  } = _ref;\n  const classes = useStyle();\n  const [blogList, setBlogList] = useState(list || []);\n  const preSearchList = useRef(list || []);\n\n  const onSearch = keyword => {\n    if (keyword === '' && blogList.length !== preSearchList.current.length) {\n      setBlogList([...preSearchList.current]);\n    } else {\n      var _preSearchList$curren;\n\n      const newList = (_preSearchList$curren = preSearchList.current) === null || _preSearchList$curren === void 0 ? void 0 : _preSearchList$curren.filter(blog => {\n        const str = `${blog.title} ${blog.desc}`.toLowerCase();\n        return str.indexOf(keyword.toLowerCase()) !== -1;\n      });\n      setBlogList([...newList]);\n    }\n  };\n\n  useEffect(() => {\n    let isSub = true;\n\n    if (list && list.length > 0 && isSub) {\n      setBlogList([...list]);\n      preSearchList.current = [...list];\n    }\n\n    return () => isSub = false;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dyno-title\",\n          children: \"H\\u1ECDc ng\\u1EEF ph\\xE1p c\\xF9ng Dyno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dyno-break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoSearchInput, {\n          disabled: loading,\n          placeholder: \"Nh\\u1EADp t\\u1EEB kho\\xE1 ...\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), loading ? Array(5).fill(0).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.listBox,\n          children: /*#__PURE__*/_jsxDEV(GrammarListBoxData, {\n            number: index + 1,\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)) : blogList.length > 0 ? blogList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.listBox,\n          children: /*#__PURE__*/_jsxDEV(GrammarListBoxData, {\n            number: index + 1,\n            loading: false,\n            ...item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"t-center\",\n          style: {\n            fontSize: '1.8rem',\n            color: 'var(--label-color)'\n          },\n          children: \"Kh\\xF4ng t\\xECm th\\u1EA5y b\\xE0i vi\\u1EBFt n\\xE0o c\\u1EA3 \\uD83D\\uDE22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grammar, \"XVfVsmN1GNpDz89m8ziHpXXi1ns=\", false, function () {\n  return [useStyle];\n});\n\n_c = Grammar;\nGrammar.propTypes = {\n  list: PropTypes.array,\n  loading: PropTypes.bool\n};\nGrammar.defaultProps = {\n  list: [],\n  loading: true\n};\nexport default Grammar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grammar\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/Grammar/index.js"],"names":["AutoSearchInput","PropTypes","React","useEffect","useRef","useState","GrammarListBoxData","useStyle","Grammar","list","loading","classes","blogList","setBlogList","preSearchList","onSearch","keyword","length","current","newList","filter","blog","str","title","desc","toLowerCase","indexOf","isSub","wrapper","root","Array","fill","map","item","index","listBox","fontSize","color","propTypes","array","bool","defaultProps"],"mappings":"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","sourcesContent":["import AutoSearchInput from 'components/UI/AutoSearchInput';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport GrammarListBoxData from './ListBox/data';\nimport useStyle from './style';\n\nfunction Grammar({ list, loading }) {\n  const classes = useStyle();\n  const [blogList, setBlogList] = useState(list || []);\n  const preSearchList = useRef(list || []);\n\n  const onSearch = (keyword) => {\n    if (keyword === '' && blogList.length !== preSearchList.current.length) {\n      setBlogList([...preSearchList.current]);\n    } else {\n      const newList = preSearchList.current?.filter((blog) => {\n        const str = `${blog.title} ${blog.desc}`.toLowerCase();\n        return str.indexOf(keyword.toLowerCase()) !== -1;\n      });\n      setBlogList([...newList]);\n    }\n  };\n\n  useEffect(() => {\n    let isSub = true;\n\n    if (list && list.length > 0 && isSub) {\n      setBlogList([...list]);\n      preSearchList.current = [...list];\n    }\n\n    return () => (isSub = false);\n  }, [list]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className=\"container\">\n        <div className={classes.root}>\n          <h1 className=\"dyno-title\">Học ngữ pháp cùng Dyno</h1>\n          <div className=\"dyno-break\"></div>\n\n          <AutoSearchInput\n            disabled={loading}\n            placeholder=\"Nhập từ khoá ...\"\n            onSearch={onSearch}\n          />\n\n          {loading ? (\n            Array(5)\n              .fill(0)\n              .map((item, index) => (\n                <div className={classes.listBox} key={index}>\n                  <GrammarListBoxData number={index + 1} loading={true} />\n                </div>\n              ))\n          ) : blogList.length > 0 ? (\n            blogList.map((item, index) => (\n              <div className={classes.listBox} key={index}>\n                <GrammarListBoxData\n                  number={index + 1}\n                  loading={false}\n                  {...item}\n                />\n              </div>\n            ))\n          ) : (\n            <h3\n              className=\"t-center\"\n              style={{ fontSize: '1.8rem', color: 'var(--label-color)' }}>\n              Không tìm thấy bài viết nào cả 😢\n            </h3>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nGrammar.propTypes = {\n  list: PropTypes.array,\n  loading: PropTypes.bool,\n};\n\nGrammar.defaultProps = {\n  list: [],\n  loading: true,\n};\n\nexport default Grammar;\n"]},"metadata":{},"sourceType":"module"}