{"ast":null,"code":"var _jsxFileName = \"/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/Logout.js\",\n    _s = $RefreshSig$();\n\nimport accountApi from 'apis/accountApi';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport GlobalLoading from './UI/GlobalLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Logout() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    isAuth\n  } = useSelector(state => state.userInfo);\n  useEffect(() => {\n    if (!isAuth) {\n      history.goBack();\n      return;\n    }\n\n    (async function () {\n      try {\n        const apiRes = await accountApi.postLogout();\n\n        if (apiRes.status === 200) {\n          dispatch(setMessage({\n            type: 'success',\n            message: 'Đăng xuất thành công'\n          }));\n          window.location.href = history.location.pathname;\n        }\n      } catch (error) {\n        dispatch(setMessage({\n          type: 'error',\n          message: 'Đăng xuất thất bại, thử lại'\n        }));\n        history.goBack();\n      }\n    })();\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isAuth && /*#__PURE__*/_jsxDEV(GlobalLoading, {\n      title: \"\\u0110ang \\u0111ang xu\\u1EA5t ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n}\n\n_s(Logout, \"f1Nt+O0I14AL1DrbW+y+w9ZCsME=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["/Users/doviethoang/Desktop/github/dynonary-english/frontend/src/components/Logout.js"],"names":["accountApi","React","useEffect","useDispatch","useSelector","useHistory","setMessage","GlobalLoading","Logout","history","dispatch","isAuth","state","userInfo","goBack","apiRes","postLogout","status","type","message","window","location","href","pathname","error"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAMK,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA9B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,MAAL,EAAa;AACXF,MAAAA,OAAO,CAACK,MAAR;AACA;AACD;;AAED,KAAC,kBAAkB;AACjB,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMf,UAAU,CAACgB,UAAX,EAArB;;AACA,YAAID,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA2B;AACzBP,UAAAA,QAAQ,CACNJ,UAAU,CAAC;AAAEY,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,OAAO,EAAE;AAA5B,WAAD,CADJ,CAAR;AAGAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBb,OAAO,CAACY,QAAR,CAAiBE,QAAxC;AACD;AACF,OARD,CAQE,OAAOC,KAAP,EAAc;AACdd,QAAAA,QAAQ,CACNJ,UAAU,CAAC;AAAEY,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAD,CADJ,CAAR;AAGAV,QAAAA,OAAO,CAACK,MAAR;AACD;AACF,KAfD;;AAiBA,WAAO,MAAM,CAAE,CAAf;AACD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBAAO;AAAA,cAAGH,MAAM,iBAAI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAb,mBAAP;AACD;;GAhCQH,M;UACSH,U,EACCF,W,EACEC,W;;;KAHZI,M;AAkCT,eAAeA,MAAf","sourcesContent":["import accountApi from 'apis/accountApi';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport GlobalLoading from './UI/GlobalLoading';\n\nfunction Logout() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.userInfo);\n\n  useEffect(() => {\n    if (!isAuth) {\n      history.goBack();\n      return;\n    }\n\n    (async function () {\n      try {\n        const apiRes = await accountApi.postLogout();\n        if (apiRes.status === 200) {\n          dispatch(\n            setMessage({ type: 'success', message: 'Đăng xuất thành công' }),\n          );\n          window.location.href = history.location.pathname;\n        }\n      } catch (error) {\n        dispatch(\n          setMessage({ type: 'error', message: 'Đăng xuất thất bại, thử lại' }),\n        );\n        history.goBack();\n      }\n    })();\n\n    return () => {};\n  }, []);\n\n  return <>{isAuth && <GlobalLoading title=\"Đang đang xuất ...\" />}</>;\n}\n\nexport default Logout;\n"]},"metadata":{},"sourceType":"module"}